<template>
 <el-dialog title="单位选择" :close-on-click-modal="true" :visible.sync="visible" :fullscreen="true" :modal="false">
    <el-form :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">       
        <el-form-item label="单位名称" prop="unitName">
        <el-input v-model="dataForm.unitName" placeholder=""></el-input>
        </el-form-item>
        <el-form-item label="单位地址" prop="address">
        <el-input v-model="dataForm.address" placeholder=""></el-input>
        </el-form-item>
      <el-form-item>
        <el-button @click="type==='3'?getDataList1():getDataList()" type="warning">查询</el-button>
					<el-button @click="visible = false" type="">取消</el-button>
      </el-form-item>
    </el-form>
   <!--  -->
		<!--   -->
		<el-table 
		@row-dblclick="dbclickRow"
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <!-- <el-table-column
        type="selection"
        header-align="center"
        align="center"
        width="50">
      </el-table-column> -->
      <el-table-column
        prop="id"
        header-align="center"
        align="center"
        label="id">
      </el-table-column>
     <!-- <el-table-column
        prop="authId"
        header-align="center"
        align="center"
        label="权限验证">
      </el-table-column>
      <el-table-column
        prop="createTime"
        header-align="center"
        align="center"
        label="创建时间">
      </el-table-column>
      <el-table-column
        prop="updateTime"
        header-align="center"
        align="center"
        label="更新时间">
      </el-table-column> -->
      <el-table-column
        prop="unitName"
        header-align="center"
        align="center"
        label="单位名称">
      </el-table-column>
     <!-- <el-table-column
        prop="unitType"
        header-align="center"
        align="center"
        label="单位类型">
      </el-table-column> -->
      <el-table-column
        prop="address"
        header-align="center"
        align="center"
        label="单位地址">
      </el-table-column>
      <el-table-column
        prop="contactName"
        header-align="center"
        align="center"
        label="联系人">
      </el-table-column>
      <el-table-column
        prop="contactPhone"
        header-align="center"
        align="center"
        label="联系电话">
      </el-table-column>
     <!-- <el-table-column
        prop="createUserId"
        header-align="center"
        align="center"
        label="创建者ID">
      </el-table-column>
      <el-table-column
        prop="updatePerson"
        header-align="center"
        align="center"
        label="修改人">
      </el-table-column>
      <el-table-column
        prop="comeFrom"
        header-align="center"
        align="center"
        label="数据来源(1PC、2微信、3安卓、4iOS、5平板、6外部某系统)">
      </el-table-column> -->
     <!-- <el-table-column
        prop="version"
        header-align="center"
        align="center"
        label="版本">
      </el-table-column>
      <el-table-column
        prop="remarks"
        header-align="center"
        align="center"
        label="备注">
      </el-table-column>
      <el-table-column
        prop="isdel"
        header-align="center"
        align="center"
        label="是否删除">
      </el-table-column> -->
     <!-- <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
      </el-table-column> -->
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
 
  </el-dialog>
</template>

<script>
  export default {
    data () {
      return {
        dataForm: {
                单位名称: '',                单位地址: ''        },
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false,
				unitList: [],
				visible: false,
				type: ''
      }
    },
    methods: {
			init (type) {
				this.visible=true
			/* 	this.unitList=unitList */
			/* alert(type==='3') */
			this.type =type
			if(type==='3'){
				 this.getDataList1()
			}else{
				 this.getDataList()
			}
			},
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        this.$http({
          url: this.$http.adornUrl('/otherunit/otherunit/list'),
          method: 'get',
          params: this.$http.adornParams({
            'page': this.pageIndex,
            'limit': this.pageSize
			    ,'unitName' : this.dataForm.unitName
			  	,'address' : this.dataForm.address
          })
        }).then(({data}) => {
          if (data && data.code === 0) {
            this.dataList = data.page.list
            this.totalPage = data.page.totalCount
          } else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
        })
      },
      dbclickRow(row,index){
         /* alert("双击具体业务你自己实现,我把 row交给你了"); */
				// alert(row.id);
				 this.visible=false
				 let data={
					 id: row.id,
					 unitName: row.unitName
				 }
				 this.$emit('refreshDataList',data);
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
			getDataList1 () {
			  this.dataListLoading = true
			  this.$http({
			    url: this.$http.adornUrl('/maintenanceunit/maintenanceunit/list'),
			    method: 'get',
			    params: this.$http.adornParams({
			      'page': this.pageIndex,
			      'limit': this.pageSize
			    ,'unitName' : this.dataForm.unitName
			  	,'address' : this.dataForm.address
			    })
			  }).then(({data}) => {
			    if (data && data.code === 0) {
			      this.dataList = data.page.list
			      this.totalPage = data.page.totalCount
			    } else {
			      this.dataList = []
			      this.totalPage = 0
			    }
			    this.dataListLoading = false
			  })
			},
    }
  }
</script>

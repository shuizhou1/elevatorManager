<template>
    <el-dialog
            custom-class="no-title"
            :close-on-click-modal="false" :fullscreen="true" :modal="false"
            :visible.sync="visible">
        <div class="button-container">
            <el-button
                    v-if="!this.currentId && isAuth('elevator:elevatorinfo:save')"
                    type="primary"
                    @click="dataFormSubmit()"><i class="el-icon--left icon-edit"></i>保存</el-button>
            <el-button
                    v-if="this.currentId && isAuth('elevator:elevatorinfo:update')"
                    type="primary"
                    @click="dataFormSubmit()"><i class="el-icon--left icon-edit"></i>修改</el-button>
            <el-button type="back" @click="visible = false;back()"><i class="el-icon--left icon-back"></i>返回</el-button>
        </div>
        <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()"
                 label-width="95px">
            <div class="module-container">
                <div class="title">设备信息</div>
                <div class="input-erea">
                    <div class="input-container">
                        <div class="item has-input widthx2 require">
                            <div class="flex-container">
                                <span class="selectTitle">设备编码：</span>
                                <el-input v-model="dataForm.regCode" placeholder="设备编号" class="select-item" @keyup.native="proving2"></el-input>
                            </div>
                        </div><div class="item has-input ">
                            <div class="flex-container">
                                <span class="selectTitle">小区名称：</span>
                                <el-input v-model="dataForm.xiaoqu" placeholder="小区名称" class="select-item"></el-input>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item has-input widthx2 require">
                            <div class="flex-container">
                                <span class="selectTitle">设备地址：</span>
                                <el-input v-model="dataForm.location" placeholder="设备地址" class="select-item"></el-input>
                            </div>
                        </div><div class="item has-input require">
                        <div class="flex-container">
                            <span class="selectTitle">6位识别码：</span>
                            <el-input v-model="dataForm.identifyingCode" placeholder="设备编号" class="select-item" @keyup.native="proving1"></el-input>
                        </div>
                    </div>
                    </div>
                    <tree :option="treeOption" v-on:getTreeData="treeParams" class="equit-container" :deepInit="!this.currentId"></tree>
                    <div class="input-container" v-if="this.currentId">
                        <div class="item has-input">
                            <div class="flex-container">
                                <span class="selectTitle">设备名称：</span>
                                <el-input v-model="maintenanceData.elevname" placeholder="设备名称" class="select-item" :disabled="true"></el-input>
                            </div>
                        </div><div class="item has-input">
                        <div class="flex-container">
                            <span class="selectTitle">设备状态：</span>
                            <el-input v-model="maintenanceData.state" placeholder="设备状态" class="select-item" :disabled="true"></el-input>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
            <div class="module-container" v-if="this.currentId">
                <div class="title">维保信息</div>
                <div class="input-erea">
                    <div class="input-container">
                        <div class="item widthx3">
                            <div class="flex-container">
                                <span class="selectTitle">维保信息：</span>
                                <div class="select-item no-input">{{ maintenanceData.mainname }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item widthx3">
                            <div class="flex-container">
                                <span class="selectTitle">单位地址：</span>
                                <div class="select-item no-input">{{ maintenanceData.mainunitadr }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">热线电话：</span>
                                <div class="select-item no-input">{{ maintenanceData.dutytel }}</div>
                            </div>
                        </div><div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">公司负责人1：</span>
                                <div class="select-item no-input">{{ maintenanceData.chargeman1 }}</div>
                            </div>
                        </div><div class="item">
                        <div class="flex-container">
                            <span class="selectTitle">负责人1电话：</span>
                            <div class="select-item no-input">{{ maintenanceData.chargemanphone1 }}</div>
                        </div>
                    </div>
                    </div>
                    <div class="input-container">
                        <div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">公司负责人2：</span>
                                <div class="select-item no-input">{{ maintenanceData.chargeman2 }}</div>
                            </div>
                        </div><div class="item">
                        <div class="flex-container">
                            <span class="selectTitle">负责人2电话：</span>
                            <div class="select-item no-input">{{ maintenanceData.chargemanphone2 }}</div>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
            <div class="module-container" v-if="this.currentId">
                <div class="title">使用单位</div>
                <div class="input-erea">
                    <div class="input-container">
                        <div class="item widthx3">
                            <div class="flex-container">
                                <span class="selectTitle">单位名称：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunitname }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item widthx3">
                            <div class="flex-container">
                                <span class="selectTitle">单位地址：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunitadr }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">联系人：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunitoper }}</div>
                            </div>
                        </div><div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">联系人电话：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunitopertel }}</div>
                            </div>
                        </div><div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">单位电话：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunittel }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="input-container">
                        <div class="item">
                            <div class="flex-container">
                                <span class="selectTitle">单位性质：</span>
                                <div class="select-item no-input">{{ maintenanceData.useunittype }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </el-form>
    </el-dialog>
</template>

<script>
    import { isEmail, isMobile, isPhone, isIDCard } from '@/utils/validate'
    import tree from '@/components/tree-select/tree-select'

    export default {
        data () {
            var validatePassword = (rule, value, callback) => {
                if (!this.dataForm.id && !/\S/.test(value)) {
                    callback(new Error('密码不能为空'))
                } else {
                    callback()
                }
            }
            var validateComfirmPassword = (rule, value, callback) => {
                if (!this.dataForm.id && !/\S/.test(value)) {
                    callback(new Error('确认密码不能为空'))
                } else if (this.dataForm.password !== value) {
                    callback(new Error('确认密码与密码输入不一致'))
                } else {
                    callback()
                }
            }
            var validateEmail = (rule, value, callback) => {
                if (!isEmail(value)) {
                    callback(new Error('邮箱格式错误'))
                } else {
                    callback()
                }
            }
            var validateMobile = (rule, value, callback) => {
                if (!isMobile(value)) {
                    callback(new Error('手机号格式错误'))
                } else {
                    callback()
                }
            }
            var validatePhone = (rule, value, callback) => {
                if (!isPhone(value)) {
                    callback(new Error('固话格式错误'))
                } else {
                    callback()
                }
            }
            var validateIDCard = (rule, value, callback) => {
                if (!isIDCard(value)) {
                    callback(new Error('身份证格式错误'))
                } else {
                    callback()
                }
            }
            return {
                treeOption: {
                    district: {},
                    stree: {},
                    community: {},
                    require: true
                },
                maintenanceData: {},
                currentId: '',
                currentDistrictId: '',
                streetList: [],
                communityNameList: [],
                list: [],
                visible: false,
                dataForm: {
                    regCode: '',
                    district: {},
                    street: {},
                    community: {},
                    xiaoqu: '',
                    location: '',
                    identifyingCode: ''
                },
                dataRule: {
                    // district: [{
                    //     required: true
                    // }],
                    // street: [{
                    //     required: true
                    // }],
                    // community: [{
                    //     required: true
                    // }],
                    // xiaoqu: [{
                    //     required: true
                    // }],
                    // location: [{
                    //     required: true
                    // }],
                    // regCode: [{
                    //     required: true
                    // }]
                }
            }
        },
        components: {
            tree
        },
        methods: {
            proving1 () {
                this.dataForm.identifyingCode = this.dataForm.identifyingCode.replace(/[^\.\d]/g, '')
                this.dataForm.identifyingCode = this.dataForm.identifyingCode.replace('.', '')
            },
            proving2 () {
                this.dataForm.regCode = this.dataForm.regCode.replace(/[^\.\d-]/g, '')
                this.dataForm.regCode = this.dataForm.regCode.replace('.', '')
            },
            back () {
                this.treeOption = {
                    district: {},
                    stree: {},
                    community: {},
                    require: true
                }
            },
            init (id) {
                this.currentId = id
                this.visible = true
                this.$nextTick(() => {
                    this.dataForm = {
                        regCode: '',
                        district: {},
                        street: {},
                        community: {},
                        xiaoqu: '',
                        location: '',
                        identifyingCode: ''
                    }
                    this.treeOption = {
                        district: {},
                        stree: {},
                        community: {},
                        require: true
                    }
                    this.maintenanceData = {}
                    if (this.currentId) {
                        this.$http({
                            url: this.$http.adornUrl(`/elevator/elevatorinfo/info/${this.currentId}`),
                            method: 'get',
                            params: this.$http.adornParams()
                        }).then(({ data }) => {
                            if (data && data.code === 0) {
                                this.dataForm.regCode = data.elevatorInfo.regCode
                                // this.dataForm.district.label = data.elevatorInfo.districtName
                                // this.dataForm.street.label = data.elevatorInfo.streetName
                                // this.dataForm.community = data.elevatorInfo.communityName
                                this.dataForm.district = {
                                    label: data.elevatorInfo.districtName,
                                    value: data.elevatorInfo.district
                                }
                                this.dataForm.street = {
                                    label: data.elevatorInfo.streetName,
                                    value: data.elevatorInfo.street
                                }
                                this.dataForm.community = {
                                    label: data.elevatorInfo.communityName,
                                    value: data.elevatorInfo.community
                                }
                                this.treeOption = {
                                    district: this.dataForm.district,
                                    street: this.dataForm.street,
                                    community: this.dataForm.community,
                                    require: true
                                }
                                this.dataForm.identifyingCode = data.elevatorInfo.identifyingCode
                                this.dataForm.xiaoqu = data.elevatorInfo.xiaoqu
                                this.dataForm.location = data.elevatorInfo.location
                                this.getMaintenance(this.dataForm.regCode)
                            }
                        })
                    }
                })
            },
            getMaintenance (id) {
                return new Promise((resolve, reject) => {
                    this.$http({
                        url: this.$http.adornUrl(`/elev/elevinfo`, 'gzelev'),
                        method: 'post',
                        params: this.$http.adornParams({
                            regcode: id // '3110-440114-201110-0008' // id
                        })
                    }).then(({ data }) => {
                        this.maintenanceData = data
                    })
                })
            },
            treeParams (data) {
                this.dataForm.district = data['district']
                this.dataForm.street = data['street']
                this.dataForm.community = data['community']
            },
            // 表单提交
            dataFormSubmit () {
                if (!this.dataForm.regCode) {
                    this.$message.error('请输入设备编码')
                    return
                } else {
                    if (this.dataForm.regCode.replace(/-/g, '').length !== 20) {
                        this.$message.error('请输入20或23位设备编码')
                        return
                    }
                }
                if (!this.dataForm.district.value) {
                    this.$message.error('所属区域不能为空')
                    return
                }
                if (!this.dataForm.street.value) {
                    this.$message.error('所属街道不能为空')
                    return
                }
                if (!this.dataForm.community.value) {
                    this.$message.error('所属社区不能为空')
                    return
                }
                if (!this.dataForm.identifyingCode.trim()) {
                    this.$message.error('识别码不能为空')
                    return
                } else {
                    if (this.dataForm.identifyingCode.length !== 6) {
                        this.$message.error('识别码为6位数')
                        return
                    }
                    if (isNaN(this.dataForm.identifyingCode)) {
                        this.$message.error('识别码为6位数')
                        return
                    }
                }
               /* if (!this.dataForm.xiaoqu.trim()) {
                    this.$message.error('小区不能为空')
                    return
                } */
                if (!this.dataForm.location.trim()) {
                    this.$message.error('设备地址不能为空')
                    return
                }
                this.$refs['dataForm'].validate((valid) => {
                    if (valid) {
                        this.$http({
                            url: this.$http.adornUrl(`/elevator/elevatorinfo/${!this.currentId ? 'save' : 'update'}`),
                            method: 'post',
                            data: this.$http.adornData({
                                'regCode': this.dataForm.regCode || undefined,
                                'district': this.dataForm.district.value,
                                'street': this.dataForm.street.value,
                                'community': this.dataForm.community.value,
                                'xiaoqu': this.dataForm.xiaoqu,
                                'location': this.dataForm.location,
                                'id': !this.currentId ? undefined : this.currentId,
                                'identifyingCode': this.dataForm.identifyingCode
                            })
                        }).then(({ data }) => {
                            if (data && data.code === 0) {
                                this.$message({
                                    message: '操作成功',
                                    type: 'success',
                                    duration: 1500,
                                    onClose: () => {
                                        this.visible = false
                                        this.treeOption = {
                                            district: {},
                                            stree: {},
                                            community: {},
                                            require: true
                                        }
                                        this.$emit('refreshDataList')
                                    }
                                })
                            } else {
                                this.$message.error(data.msg)
                            }
                        })
                    }
                })
            }
        }
    }
</script>

<style lang="scss">
    .no-title {
        .el-dialog__body {
            padding: 10px 20px;
        }
    }
    .equit-container {
        width: 100%;
    }
    .module-container {
        margin-bottom: 10px;
        .title {
            background: #f1f1f1;
            color: #4d4e4e;
            font-size: 14px;
            line-height: 14px;
            height: 40px;
            padding: 13px 10px;
            margin-bottom: 20px;
        }
    }
</style>
<style scoped lang="scss">
    .button-container {
        text-align: center;
    }
</style>

<!--  -->
<template>
  <div>
    <!-- form_wraper -->
    <div class="form_wraper">
      <div class="header">维保列表</div>
      <el-form
        ref="form"
        :model="formData"
        class="form"
        style="margin-left:10px"
        label-width="auto"
        :rules="rules"
        @keyup.enter.native="getDataList('init')"
      >
        <el-row :gutter="40">
          <el-col :span="8">
            <el-form-item label="维保单位" prop="unitName">
              <el-input v-model="formData.unitName" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="状态" prop="maintenanceStutas">
              <el-select v-model="formData.maintenanceStatus" clearable placeholder="请选择">
                <el-option
                  v-for="item in options"
                  :key="item.value"
                  :label="item.label"
                  :value="item.value"
                ></el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="2" :offset="0">
            <el-button @click="getDataList('init')" type="query">查询</el-button>
          </el-col>
        </el-row>
      </el-form>
    </div>
    <!-- 维保计划表 -->
    <!-- <div></div> -->
    <el-table :data="wbjlTableData" border v-loading="loading" style="width: 100%;">
     
      <el-table-column prop="planTime" align="center" :formatter="formatDate" label="计划时间" width="180px"></el-table-column>
      <el-table-column prop="unitName" show-overflow-tooltip align="center" label="维保单位" min-width="200px"></el-table-column>
     
      <!-- <el-table-column prop="locals" label="电梯地址"></el-table-column> -->
      <el-table-column prop="planName" align="center" label="计划名称" width="200px"></el-table-column>
      <el-table-column prop="maintenanceStatus" align="center" :formatter="formatStatus" label="状态" width="150px"></el-table-column>
      <el-table-column prop="propertyCheckTime" align="center" :formatter="formatDate" label="完成时间" width="180px"></el-table-column>
      <el-table-column label="操作" header-align="center" align="center" min-width="120px">
        <template slot-scope="scope">
          <el-button
				  	v-if="isAuth('maintenance:maintenanceplan:xq')"
            size="mini"
            style="padding:8px 10px;font-size:12px;height:36px"
            type="primary"
            @click="handleAddorUpdate(scope.row.planId,scope.row.unitName)"
          >详情</el-button>
           <el-button
            size="mini"
            v-if="isAuth('maintenance:maintenanceplan:yy')"
						:disabled="scope.row.juedge==1"
            style="padding:8px 10px;font-size:12px;height:36px"
            type="warning"
            @click="handleOrder(scope.row)"
          >预约</el-button>
           <el-button
            size="mini"
            v-if="isAuth('maintenance:maintenanceplan:delete')"
						:disabled="scope.row.maintenanceStatus!=1"
            style="padding:8px 10px;font-size:12px;height:36px"
            type="delete"
            @click="handleDelete(scope.row.planId)"
          >作废</el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="pagination_wraper">
      <el-pagination
          @size-change="sizeChangeHandle"
          @current-change="currentChangeHandle"
          :current-page="pageIndex"
          :page-sizes="[5, 10, 20, 50]"
          :page-size="pageSize"
          :total="totalCount"
          layout="total, sizes, prev, pager, next, jumper"
    ></el-pagination>
    </div>
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
    <list-appointment v-if="appointmentVisible" ref="appointmentAddOrUpdate" @refreshDataList="getDataList"></list-appointment>
  </div>
</template>

<script>
import addOrUpdate from "./maintenancelist-add-or-update";
import listAppointment from './list-appointment'

export default {
  data() {
    return {
      loading:false,
      appointmentVisible:'',
      addOrUpdateVisible: false,
      pageSize: 10,
      pageIndex: 1,
      totalCount: 0,
      formData: {
        maintenanceStatus:'',
        unitName:''
      },
      options: [{
          value: '1',
          label: '未开始'
        }, {
          value: '2',
          label: '待处理'
        }, {
          value: '3',
          label: '完成'
        },{
          value: '4',
          label: '作废'
        }, {
          value: '4',
          label: '作废'
        }],
      rules: {
        wbdw: [
          {
            required: true,
            message: "维保单位不能为空"
          }
        ],
        czzt: [
          {
            required: true,
            message: "状态不能为空"
          }
        ]
      },
      // 维保计划数据
      wbjlTableData: [
      ],
      totalNum: 50 //数据总数
    };
  },
  components: {
    addOrUpdate,
    listAppointment
  },
  activated() {
    this.getDataList();
  },
  methods: {
     getDataList(type){
      // console.log('获取数据',this.pageIndex);
      // console.log('获取数据');
      if(type==="init"){
        this.pageIndex = 1;
      }
      console.log('获取数据',this.pageIndex);
      this.loading = true;
      this.$http({
        url:this.$http.adornUrl('/maintenanceplan/maintenanceplan/list'),
        method:'get',
        params:this.$http.adornParams({
          unitName:this.formData.unitName,
          maintenanceStatus:this.formData.maintenanceStatus,
          limit:this.pageSize,
          page:this.pageIndex
        })
      }).then(({data})=>{
        console.log('res',data);
        if(data&&data.code==0){
           this.loading = false;
          this.totalCount = data.page.total;
          this.wbjlTableData = data.page.records;
        }
      }).catch(e=>{
        console.log(e);
      })
    },
     // 每页数
    sizeChangeHandle(val) {
      this.pageSize = val;
      this.pageIndex = 1;
      this.getDataList();
    },
    // 当前页
    currentChangeHandle(val) {
      console.log(val);
      this.pageIndex = val;
      console.log(this.pageIndex);
      this.getDataList();
    },
    formatDate(row, column, cellValue) {
      if (cellValue && cellValue.length) return cellValue.substr(0, 10);
    },
    formatStatus(row,col,value){
      if(value==1){
        return '未开始'
      }
       if(value==2){
        return '待处理'
      }
       if(value==3){
        return '完成'
      }
       if(value==4){
        return '作废'
      }
    },
    // 详情页
    handleAddorUpdate(id,name) {
      console.log("addupdate",name);
      this.addOrUpdateVisible = true;
      this.$nextTick(() => {
        this.$refs.addOrUpdate.init(id,name);
      });
    },
    handleOrder(row){
      // 预约
      console.log('row',row);
      console.log("维保记录");
      this.loading = true;
      this.$http({
        url: this.$http.adornUrl(`/maintenanceplan/maintenanceplan/info`),
        method: "get",
        params: this.$http.adornParams({
          planId: row.planId,
          limit: 20
        })
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log(data.page.list);
            let page = data.page.list;
            let regcodes = page.map(item=>item.regcode).join(',');
            console.log('regcode',regcodes);
            this.wbdtTableData = page;
            this.appointmentVisible = true;
            this.$nextTick(()=>{
              this.$refs.appointmentAddOrUpdate.init(row,regcodes);
            })
          }
        })
        .catch(e => {});
    },
    // 作废
    handleDelete(id){
      this.$confirm("确定废除该计划？", "提示", {
        confirmButtonText: "确定",
        concelButtonText: "取消",
        showClose:false,
        type:'warning',
        }).then(()=> {
          this.$http({
            url:this.$http.adornUrl(`/maintenanceplan/maintenanceplan/updateStutas/${id}`),
            method:'post'
          }).then(({data})=>{
            if(data&&data.code==0){
              this.$message({
                type:'success',
                message:'操作成功',
                duration:1500,
                onClose:()=>{
                  this.getDataList();
                }
              })
            }
          })
        })
    }
  }
};
</script>
<style  scoped>
.pagination_wraper {
  margin: 20px 0;
  text-align: center;
}
</style>

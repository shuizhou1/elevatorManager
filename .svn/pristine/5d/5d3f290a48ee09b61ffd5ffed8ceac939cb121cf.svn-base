import Vue from 'vue'
import Router from 'vue-router'
import Home from './views/Home.vue'
import login from './views/login.vue'
// import maintenance from './view/maintenance.vue'

Vue.use(Router)
// 路由懒加载
const maintenance = () => import('./views/maintenance/index.vue');
const router = new Router({
  mode: 'history',
  base: process.env.BASE_URL,
  routes: [{
      path: '/',
      name: 'home',
      component: Home
    },
    {
      path: '/login',
      name: 'login',
      component: login
    },
    {
      path: '/maintenance',
      name: 'maintenance',
      // route level code-splitting
      // this generates a separate chunk (about.[hash].js) for this route
      // which is lazy-loaded when the route is visited.
      component: maintenance
    },
    {
      path: '/zzwh', //自主维护
      name: 'zzwh',
      component: () => import('./views/zwwh/index.vue')
    },
    {
      path: '/repairManager', //维修
      name: 'repairManager',
      component: () => import('./views/repairManager/index.vue')
    },
    {
      path: '/monitorManager', //监控管理
      name: 'monitorManager',
      component: () => import('./views/monitorManager/index.vue')
    },
    {
      path: '/baseInfo', //基础信息
      name: 'baseInfo',
      component: () => import('./views/baseInfo/index.vue')
    },
    {
      path: '/systemManager', //系统管理
      name: 'systemManager',
      component: () => import('./views/systemManager/index.vue')
    }
  ],
  // 设置路由改变时滚动位置
  scrollBehavior(to, from, savePosition) {
    if (savePosition) {
      return savePosition //以浏览器返回键方式改变路由才有该参数
    } else {
      return {
        x: 0,
        y: 0
      } //默认返回顶部
    }
  }
})

router.beforeEach((to,form,next)=>{
  
  console.log(to);
  console.log(form);
  console.log(next);
})
export default router
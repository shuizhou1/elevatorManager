<!--  -->
<template>
  <!-- <div> -->
  <el-dialog
    custom-class="no-title"
    :close-on-click-modal="false" 
    :fullscreen="true" 
    :modal="false"
    :visible.sync="visible"
  >
  <el-form ref="form" :model="queryElevatorForm" @keyup.enter.native="getDataList()">
      <el-row :gutter="40">
        <el-col :span="7">
          <el-form-item label="维保单位">
            <el-input v-model="queryElevatorForm.unitname" placeholder="维保单位" clearable></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="7">
          <el-form-item label="电梯地址">
            <el-input v-model="queryElevatorForm.locals" placeholder="电梯地址" clearable></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="7">
          <el-form-item label="注册代码">
            <el-input v-model="queryElevatorForm.regCodes" placeholder="注册代码" clearable></el-input>
          </el-form-item>
        </el-col>
           <el-col :span="3">
          <el-form-item>
            <el-button @click="getDataList('init')" type="primary">查询</el-button>
          </el-form-item>
        </el-col>
      </el-row>
    </el-form>
    <el-table
      :data="elevatorDataList"
      ref="multipleTable"
      max-height="400"
      border
      :show-close="false"
      v-loading="dataListLoading"
      highlight-current-row
      :row-key="getRowKey"
      @selection-change="elevatorChange"
      style="width: 100%;margin-bottom:30px"
    >
      <el-table-column type="selection" :selectable="rowSelectable" :reserve-selection="true" width="50" align="center"></el-table-column>
     
      <el-table-column
        prop="regcode"
        header-align="center"
        :show-overflow-tooltip="true"
        :render-header="renHeader"
        align="center"
        width="200"
        label="设备注册码"
      ></el-table-column>
      <el-table-column prop="unitname" show-overflow-tooltip header-align="center" align="center" label="维保单位"></el-table-column>
      <el-table-column prop="locals" show-overflow-tooltip  header-align="center" align="center" label="电梯地址"></el-table-column>
      <el-table-column
        prop="elevatorstatus"
        :formatter="formatElevatorstatus"
        header-align="center"
        align="center"
        width="80"
        label="电梯类型"
      ></el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalCount"
      layout="total, sizes, prev, pager, next, jumper"
    ></el-pagination>
    <div class="dialog_footer">
      <el-button type="primary" @click="selectConfirm()">确 定</el-button>
      <el-button @click="visible=false">返回</el-button>
    </div>
  </el-dialog>
  <!-- </div> -->
</template>

<script>
export default {
  data() {
    return {
      pageSize: 10,
      pageIndex: 1,
      totalCount: 0,
      rules: {},
      visible: false,
      dataListLoading: false, //loading
      elevatorDataList: [],
      elevators: null,
      radioValue:'',
      queryElevatorForm: {
        regCodes: "", //注册码
        unitname: "", //维保单位
        locals: "", //设备地址
        elevatorstatus: "" //电梯类型1客梯2货梯
      },
      selecDataList: [], //选择结果
      isCheck:false,//是否是查看电梯
    };
  },
 computed:{
   unitType(){
     return this.$store.getters['user/userInfo'].unitType
   }
 },
  created() {
    console.log("create");
  },
  methods: {
    renHeader(h,c){
      console.log('1',c);
    },
    formatElevatorstatus(row, col, val) {
      console.log(val);
      if (val == 1) {
        return "客梯";
      } else {
        return "货梯";
      }
    },
    init() {
      console.log('init','选择电梯')
      this.visible = true;
       this.$nextTick(()=>{
         this.$refs['form'].resetFields();
         this.getDataList();
      })
    },
    getRowKey(row){
      return row.regcode;
    },

    // 是否可选
    rowSelectable(){
      return true;
      // return this.unitType == '2'
    },
    // 获取数据
    getDataList(type) {
      if(type="init"){
        this.pageIndex = 1;
      }
      this.dataListLoading = true;
      let url ="/elevatorinformation/elevatorinformation/list" 
      this.$http({
        url: this.$http.adornUrl(url),
        method: "get",
        params: this.$http.adornParams({
          page: this.pageIndex,
          limit: this.pageSize,
          unitName: this.queryElevatorForm.unitname,
          local: this.queryElevatorForm.locals,
          regCodes:this.queryElevatorForm.regCodes
        })
      }).then(({ data }) => {
        if (data && data.code === 0) {
          this.elevatorDataList = data.page.list;
          this.totalCount = data.page.totalCount;
         
        } else {
          // this.dataList = [];
          this.totalCount = 0;
        }
        this.dataListLoading = false;
      });
    },
    // 每页数
    sizeChangeHandle(val) {
      this.pageSize = val;
      this.pageIndex = 1;
      this.getDataList();
    },
    // 当前页
    currentChangeHandle(val) {
      this.pageIndex = val;
      this.getDataList();
    },
    elevatorChange(e) {
      console.log("选择改变", e);
      if (e) {
        this.selectDataList = e;
      }
    },
    selectConfirm() {
      console.log("确认选择 elevatorSelectConfirm");
      console.log("确认选择 ", this.selectDataList);

      if (this.selectDataList.length) {
        this.$emit("confirm", this.selectDataList);
        this.visible = false;
      } else {
        this.$message.warning("请选择电梯！");
      }
    }
  }
};
</script>
<style lang='scss' scoped>
.title {
  font-size: 22px;
  padding-bottom: 10px;
}
.subTitle {
  font-size: 18px;
  padding: 10px 10px;
  border-bottom: 1px solid #dedede;
}
.pagination_wraper {
  margin: 20px 0;
  text-align: center;
}
</style>
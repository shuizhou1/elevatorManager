<!--  -->
<template>
    <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
    :modal="false"
    :visible.sync="visible"
  >
    <!-- 维保各项情况表 -->
    <div class="header clearfix">
      <span>设置维保计划记录表</span>
      <el-button class="fr" @click="handleBack" type="back" icon="el-icon-back">返回</el-button>
    </div>
    <el-table :data="wbgxqkData" border style="width: 100%" v-loading="loading">
      <el-table-column  type="selection" width="50"></el-table-column>
      <el-table-column type="index" label="序号" width="180"></el-table-column>
      <el-table-column prop="content" label="维护保养项目"></el-table-column>
      <el-table-column prop="demand" label="维护保养基本要求"></el-table-column>
      <el-table-column prop="wbqk" label="维保情况">
        <template slot-scope="scope">
          <el-radio-group v-model="formData[scope.row]">
            <el-radio :label="1">确认正常</el-radio>
            <el-radio :label="0">调整、更换</el-radio>
            <el-radio :label="-1">需维修</el-radio>
          </el-radio-group>
         
        </template>
      </el-table-column>
    </el-table>
    <div class="button_wraper">
      <el-button @click="handleAddItem" style="margin-right:20px" type="warning">添加项目</el-button>
      <el-button @click="handleDeleteItem" style="margin-left:20px" type="danger">移除项目</el-button>
    </div>
    <el-pagination
          @size-change="sizeChangeHandle"
          @current-change="currentChangeHandle"
          :current-page="pageIndex"
          :page-sizes="[5, 10, 20, 50]"
          :page-size="pageSize"
          :total="totalCount"
          layout="total, sizes, prev, pager, next, jumper"
    ></el-pagination>
    </el-dialog>
</template>

<script>
export default {
  data() {
    return {
      visible:false,
      loading:false,
      pageSize: 10,
      pageIndex: 1,
      totalCount: 0,
      formData: {},
      wbgxqkData: [
       
      ]
    };
  },
  components: {},
  created() {},
  methods: {
    init() {
      console.log("获取数据");
      this.visible = true;
      this.getDataList();
     
    },
    getDataList(){
      this.loading = true;
      this.$http({
        url:this.$http.adornUrl('/maintenancecontent/maintenancecontent/list'),
        method:'get',
        data:this.$http.adornParams({
          limit:this.pageSize,
          page:this.pageIndex
        })
      }).then(({data})=>{
        if(data&&data.code==0){
          console.log(data.page);
          this.loading = false;
          this.totalCount = data.page.totalCount;
          this.wbgxqkData = data.page.list;
        }
      })
    },
    handleAddItem() {
      console.log("添加项目");
    },
    handleDeleteItem() {
      console.log("移除项目");
    },
    handleBack() {
      this.visible = false;
      this.$emit("back");
    },
     // 每页数
    sizeChangeHandle(val) {
      this.pageSize = val;
      this.pageIndex = 1;
      this.getDataList();
    },
    // 当前页
    currentChangeHandle(val) {
      this.pageIndex = val;
      this.getDataList();
    },
  }
};
</script>
<style lang='scss' scoped>
.button_wraper {
  margin: 20px 0;
  text-align: center;
}
</style>
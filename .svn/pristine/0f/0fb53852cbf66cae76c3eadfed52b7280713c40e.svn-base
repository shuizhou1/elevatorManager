<template>
  <div>
    <div>
      <div class="form_wraper">
        <!-- <div class="header">设置维保计划</div> -->
         <!-- <div class="form-view-wraper">
        <el-row :gutter="40">
          <el-col :span="8">
            <div class="form-view-item">
              <div>
                维保电梯：
                <span>{{formData.regCode}}</span>
              </div>
           
              <el-button @click="selectMaintenanceUnit">选择</el-button>
            </div>
            
          </el-col>
          <el-col :span="8">
            <div class="form-view-item">
              维保单位：
              <span>{{formData.maintenanceName}}</span>
            </div>
          </el-col>
        </el-row>
      </div> -->
        <el-form ref="form" :model="formData" :rules="rules" class="form" label-width="auto">
          <el-row :gutter="40">
            
            <el-col :span="8" >
              <el-form-item label="维保单位" prop="maintenanceUnit">
                <el-input v-model="formData.maintenanceUnit" disabled>
                  <template slot="append">
                    <el-button style="background:#fff;border-color:#eee"    @click="selectMaintenanceUnit">选择</el-button>
                  </template>
                </el-input>
                <!-- <div>
                   <el-button @click="selectMaintenanceUnit">选择</el-button>
                </div> -->
              
              </el-form-item>
              <!-- <div class="form_label">维保单位</div> -->
            </el-col>
             <el-col :span="8">
              <el-form-item label="维保电梯" prop="regCode">
                <el-input v-model="formData.regCode" disabled>
                  <template slot="append">
                    <el-button @click="selectElevator" :disabled="!formData.maintenanceUnit">选择</el-button>
                  </template>
                </el-input>
              </el-form-item>
            </el-col>
             <el-col :span="8" >
              <el-form-item label="维保期数" prop="maintenanceCount">
                <el-input v-model="formData.maintenanceCount" min="1" type="number" v-enterNumber></el-input>
              </el-form-item>
            </el-col>
            
            <!-- <el-col :span="7" :offset="1">
              <el-form-item label="维护期限" prop="maintenanceDate">
                <el-input v-model="formData.maintenanceDate"></el-input>
              </el-form-item>
            </el-col>-->
          </el-row>
          <el-row :gutter="40">
            <el-col :span="8">
              <el-form-item label="每期间隔" type="number" min="1" prop="maintenanceSize" v-enterNumber>
                <el-input v-model="formData.maintenanceSize">
                  <template slot="append">天</template>
                </el-input>
              </el-form-item>
            </el-col>
						 <el-col :span="8">
						  <el-form-item label="开始时间" prop="maintenanceStartTime">
						    <el-date-picker
						      v-model="formData.maintenanceStartTime"
						      format="yyyy 年 MM 月 dd 日"
						      value-format="yyyy-MM-dd HH:mm:ss"
						      type="datetime"
						    ></el-date-picker>
						  </el-form-item>
						</el-col>
              <el-col :span="8">
                  <el-form-item label="联系人" prop="processUser">
										<label slot="label">联&nbsp;系&nbsp;人&nbsp;</label>
                    <el-input v-model="formData.processUser"></el-input>
                  </el-form-item>
                </el-col>
            <!-- <el-col :span="1">
              <el-button @click="selectElevator">选择</el-button>
            </el-col>-->
          </el-row>
          <el-row :gutter="40">
              <el-col :span="8">
              <el-form-item label="联系方式" prop="phone">
                <el-input v-model="formData.phone"></el-input>
              </el-form-item>
            </el-col>
						 <el-col :span="8">
						  &nbsp;&nbsp;维保内容<el-button style="margin-left:15px" @click="handleEdit('form')">设置维保内容</el-button>
							 </el-col>
          </el-row>
        </el-form>
      </div>
      <div class="button_wraper" v-loading="loading">
      
        <el-button @click="handleSave('form')" style="margin-left:20px" type="save">生成维保计划</el-button>
        <el-button @click="formReset('form')" style="margin-left:20px" type="warning">重置</el-button>
      </div>
      <el-dialog :modal="false" :show-close="false" :visible.sync="showFormconfirmDialog" width="40%" top="200px">
        <div slot="title" class="dialog_title">维保计划确认</div>
        <div class="wbjh_content">
          <div>维保单位：{{formData.maintenanceUnit}}</div>
          <div>维保联系人：{{formData.processUser}}</div>
          <div>联系方式：{{formData.phone}}</div>
          <div>维保开始时间：{{formData.maintenanceStartTime.substring(0,10)}}</div>
          <div>维保期数：{{formData.maintenanceCount}}</div>

          <!-- 日立电梯（中国）有限公司广州分公司将于{{formData.maintenanceStartTime}}对维保电梯({{formData.regCode}})
          进行第一期维护保养,之后每隔{{formData.maintenanceSize}}天进行一期维护保养，连续进行{{formData.maintenanceCount}}期，维保期限为{{formData.maintenanceDate}}个月。确认后
          将在维保计划列表生成{{formData.maintenanceCount}}条维保计划记录-->
        </div>
        <div class="button_wraper">
          <el-button @click="formSubmit('form')" type="primary" style="margin-right:20px">确认</el-button>
          <el-button @click="handleCancel()" style="margin-left:20px">取消</el-button>
        </div>
      </el-dialog>
    </div>

    <set-maintenance-item v-if="showszjlTable" ref="setItem" @back="goBack"></set-maintenance-item>
    <select-elevator
      v-if="showElevatorselectDialog"
      ref="elevatorSelector"
      @confirm="selectElevatorConfirm"
    ></select-elevator>
    <select-maintenance-unit
      v-if="showMaintenanceunitselctDialog"
      ref="maintenanceunitSelector"
      @confirm="selectMaintenanceuniConfirm"
    ></select-maintenance-unit>
  </div>
</template>



<script>
import setMaintenanceItem from "./setMaintenanceItem.vue";
import selectElevator from "@/components/selectElevator.vue";
import selectMaintenanceUnit from "@/components/selectmaintenanceunit.vue";
import { isMobile } from "@/utils/validate";
export default {
  components: {
    setMaintenanceItem,
    selectElevator,
    selectMaintenanceUnit
  },
  activated(){
    this.$nextTick(()=>{
      this.$refs['form'].resetFields();
    })
  },
  methods: {
    handleEdit() {
      console.log("设置维保计划");
      this.showszjlTable = true;
      this.$nextTick(() => {
        this.$refs.setItem.init(this.formData.maintenanceContentId);
      });
    },
    handleSave(formName) {
      console.log("生成维保计划", this.formData);
      this.$refs[formName].validate(valid => {
        if (valid) {
          // alert("submit!");
          this.showFormconfirmDialog = true;
          console.log(this.formData);
        } else {
          return false;
        }
      });
    },
    formSubmit() {
      console.log("提交表单",this.formData);
      this.showFormconfirmDialog = false;
      this.loading = true;
      this.$http({
        url: this.$http.adornUrl("/maintenanceplan/maintenanceplan/save"),
        method: "post",
        data: this.$http.adornData(this.formData)
      }).then(({ data }) => {
         this.loading = false;
        if (data && data.code == 0) {
          this.$message({
                message: "保存成功",
                type: "success",
                duration: 1500,
          });
          this.$refs['form'].resetFields();
        }
      });
    },
    handleCancel() {
      this.showFormconfirmDialog = false;
    },
    formReset(formName) {
      this.$refs[formName].resetFields();
    },
    // 从维保记录表返回
    goBack(ids) {
      console.log("内容id", ids);
      this.showszjlTable = false;
      this.formData.maintenanceContentId = ids;
    },
    // 选择电梯
    selectElevator() {
      this.showElevatorselectDialog = true;
      this.$nextTick(() => {
        this.$refs.elevatorSelector.init(this.formData.maintenanceId,this.formData.regCode);
      });
    },
    selectElevatorConfirm(val) {
      console.log("确认选择", val);
      let regcodes = val.map(item => item.regcode).join(",");
      console.log(regcodes);
      this.formData.regCode = regcodes;
    },
    // 选择维保单位
    selectMaintenanceUnit() {
      this.showMaintenanceunitselctDialog = true;
      this.$nextTick(() => {
        this.$refs.maintenanceunitSelector.init(this.formData.maintenanceId);
      });
    },
    selectMaintenanceuniConfirm(val) {
      console.log("确认选择", val);
      console.log("id", val.id);
     
      if(val&&val.id!=this.formData.maintenanceId){
        console.log('235-----')
          this.formData.regCode = '';//清空维保电梯
      }
      this.formData.maintenanceId = val.id;
      this.formData.maintenanceUnit = val.unitName;
    }
  },
  data() {
    const checkmobile = (rule, value, callback) => {
      if (!isMobile(value)) {
        callback(new Error("手机号格式错误"));
      } else {
        callback();
      }
    };
    return {
      loading: false,
      formData: {
        maintenanceContentId: "", //维保内容id
        maintenanceCount: "", //维保次数
        maintenanceDate: "", //维保期限
        maintenancePeople: "",
        // allowEmptyValue: false
        // 维保联系人
        maintenancePhone: "",
        // allowEmptyValue: false
        // 联系人手机
        maintenanceSize: "",
        // allowEmptyValue: false
        // 维保间隔
        maintenanceStartTime: "",
        // allowEmptyValue: false
        // 维保开始时间
        maintenanceUnit: "",
        // allowEmptyValue: false
        // 维保单位
        regCode: ""
        // allowEmptyValue: false
        // 维保电梯
      },
      showszjlTable: false, //显示维保记录表
      showElevatorselectDialog: false, //是否显示电梯选择dialog
      showMaintenanceunitselctDialog: false, //维保单位选择
      showFormconfirmDialog: false, //是否显示表单确认dialog
      rules: {
        maintenanceContentId: [
          {
            required: true,
            message: "维保内容不能为空"
          }
        ], //维保内容id
        maintenanceCount: [
          {
            required: true,
            message: "维保期数不能为空"
          }
        ], //维保次数
        // maintenanceDate: [
        //   {
        //     required: true,
        //     message: "维保期限不能为空"
        //   }
        // ], //维保期限
        processUser: [
          {
            required: true,
            message: "联系人不能为空"
          }
        ],
        // allowEmptyValue: false
        // 维保联系人
        phone: [
          {
            required: true,
            message: "联系方式不能为空"
          },
          {
            validator: checkmobile,
            trigger: "blur"
          }
        ],
        // allowEmptyValue: false
        // 联系人手机
        maintenanceSize: [
          {
            required: true,
            message: "每期间隔不能为空"
          }
        ],
        // allowEmptyValue: false
        // 维保间隔
        maintenanceStartTime: [
          {
            required: true,
            message: "开始时间不能为空"
          }
        ],
        // allowEmptyValue: false
        // 维保开始时间
        maintenanceUnit: [
          {
            required: true,
            message: "请选择维保单位"
          }
        ],
        // allowEmptyValue: false
        // 维保单位
        regCode: [
          {
            required: true,
            message: "请选择维保电梯"
          }
        ]
        // allowEmptyValue: false
        // 维保电梯
      }
    };
  }
};
</script>
<style>
.wbjh_content {
  text-indent: 2em;
  line-height: 25px;
}
</style>
<!--  -->
<template>
  <div>
    <div class="header">查询条件</div>
    <el-form
      ref="form"
      :model="formData"
      class="form"
      style="margin-left:10px"
      label-width="auto"
      v-loading="false"
      @keyup.enter.native="getDataList"
    >
      <el-row :gutter="20">
        <el-col :span="8">
          <el-form-item label="电梯类型">
            <el-select v-model="formData.elevatorStatus" placeholder="请选择">
                <el-option
                  v-for="item in options"
                  :key="item.value"
                  :label="item.label"
                  :value="item.value"
                ></el-option>
              </el-select>
          </el-form-item>
        </el-col>
        <el-col :span="8">
          <el-form-item label="电梯地址">
            <el-input v-model="formData.local"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="6" :offset="1">
          <el-button @click="getDataList('init')" type="primary">查询</el-button>
          <el-button @click="handleAddorUpdate" type="warning">添加</el-button>
          <el-button @click="handleRemove" :disabled="!selectDataList.length" type="danger">移除</el-button>
        </el-col>
      </el-row>
    </el-form>
    <div class="header">电梯列表</div>
    <el-table
      ref="multipleTable"
      v-loading="loading"
      border
      :data="tableData"
      tooltip-effect="dark"
      style="width: 100%"
      @selection-change="handleSelectionChange"
    >
      <el-table-column type="selection" width="50" align="center"></el-table-column>
      <el-table-column prop="regCode" label="电梯注册码" align="center" show-overflow-tooltip></el-table-column>
      <el-table-column prop="maintenanceName" label="维保单位" align="center" show-overflow-tooltip></el-table-column>
      <el-table-column prop="local" label="电梯地址" align="center"></el-table-column>
      <el-table-column prop="createTime" label="添加日期" align="center"></el-table-column>
    </el-table>
    <div class="pagination_wraper">
      <el-pagination
        layout="total, sizes, prev, pager, next, jumper"
        :total="totalCount"
        @size-change="sizeChangeHandle"
        @current-change="currentChangeHandle"
        :page-sizes="[5,10,20,50]"
        :page-size="pageSize"
      ></el-pagination>
    </div>
    <add-or-update v-if="dialogVisible" ref="addOrUpdate"></add-or-update>
  </div>
</template>

<script>
import addOrUpdate from './elevatorinfo-add-or-update';
export default {
  components:{
    addOrUpdate
  },
  data () {
    return {
       formData: {
        contactName:'',//联系人
        unitName:'',//维保单位
        address:''//维保单位地址
      },
      options:[
        {label:'客梯',value:'1'},
        {label:'货梯',value:'2'},
      ],
      tableData: [
      ],
      selectDataList:[],
      dialogVisible: false,
      loading:false,
      pageSize: 10,
      pageIndex: 1,
      totalCount:0
    };
  },
 
  activated() {
    this.getDataList()
  },
  methods: {
    getDataList(type) {
      console.log("获取数据");
      this.loading = true;
      if(type=='init'){
        this.pageIndex=1;
      }
      this.$http({
        url: this.$http.adornUrl("/elevatorinformation/elevatorinformation/list"),
        method: "get",
        params:this.$http.adornParams({
          limit: this.pageSize,
          page: this.pageIndex,
          contactName:this.formData.contactName,
          unitName:this.formData.unitName,
          address:this.formData.address
        })
      })
        .then(({data}) => {
          if(data&&data.code==0){
            this.loading = false;
            this.totalCount = data.page.totalCount;
            this.tableData = data.page.list;
            console.log(data)
          }
        })
    },
    handleSelectionChange(val) {
      console.log("选项改变", val);
      this.selectDataList = val;
    },
    handleAddorUpdate() {
      console.log("添加/更新");
      this.dialogVisible = true;
      this.$nextTick(()=>{
        this.$refs.addOrUpdate.init()
      })
    },
    // 删除
    handleRemove() {
      var ids =  this.selectDataList.map(item => {
            return item.id;
          });
      this.$confirm(`确定删除?`, "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$http({
          url: this.$http.adornUrl("/elevatorinformation/elevatorinformation/delete"),
          method: "post",
          data: this.$http.adornData(ids, false)
        }).then(({ data }) => {
          if (data && data.code == 0) {
            this.$message({
              type:'success',
              message:'操作成功',
              duration:1500,
              onClose:()=>{
                this.getDataList();
              }
            })
          } else {
          }
        });
      });
    },
    //每页数改变
    sizeChangeHandle(e){
      this.pageSize = e;
      this.pageIndex = 1;
      this.getDataList()
    },
    // 当前页
    currentChangeHandle(e) {
      this.page = e;
      this.getDataList()
    }
  }
}

</script>
<style  scoped>
</style>
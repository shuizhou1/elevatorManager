<!--  -->
<template>
  <div>
    <el-form class="form"  style="margin-left:10px">
       <el-row :gutter="40">
          <el-col :span="8">
            <el-form-item label="注册代码" prop="regCode">
              <el-input v-model="formData.regCode" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="9">
            <el-form-item label prop="setime">
              <el-date-picker
                clearable
                v-model="formData.setime"
                type="daterange"
                @change="pickStimeEtime"
                range-separator="至"
                start-placeholder="开始日期"
                end-placeholder="结束日期"
                value-format="yyyy-MM-dd"
              ></el-date-picker>
            </el-form-item>
          </el-col>
           <el-col :span="4">
            <el-button @click="getData" type="query">查询</el-button>
          </el-col>
        </el-row>
    </el-form>
    <div class="chartContainer" :style="{'height': height, 'width': '100%'}">
      <div id="chartBox" :style="{'width':width,'height':height}"></div>
    </div>
  </div>
</template>

<script>
import echart from "echarts";
export default {
   activated() {
    console.log("actie");
    // 由于给echart添加了resize事件, 在组件激活时需要重新resize绘画一次, 否则出现空白bug

    if (this.chart) {
      this.chart.resize();
    }
  },
  data() {
    return {
      area:[],
      formData: {
        stime:'',
        etime:'',


      },
      height: "",
      width: "",
      chart: "",
      areaData:[],
      option: {
        title:{
          text:'报警类统计',
          x:'center',
          textStyle: {
            fontWeight: "normal" //标题颜色
          }
        },
        tooltip: {
          trigger: "item",
          // formatter: "{a} <br/>{b}: {c} ({d}%)"
        },
         grid: {
          left: "3%",
          right: "5%",
          bottom: "8%",
          containLabel: true
        },
        legend: {
          y: "bottom",
          data: [
            "警报",
            "故障",
            "困人",
          ]
        },
        xAxis: {
          type: "category",
          splitLine: { show: false },
          data: [],
          axisLine: {
            lineStyle: {
              type: "solid",
              color: "eee", //坐标线的颜色
              width: "2" //坐标线的宽度
            }
          },
          axisLabel: {
            textStyle: {
            }
          }
        },
        yAxis: {
          type: "value",
          axisLine: {
            lineStyle: {
              type: "solid",
              color: "eee", //左边线的颜色
              width: "2" //坐标线的宽度
            }
          },
          axisLabel: {
            textStyle: {}
          }
        },
        series: [
          {
            name: "警报",
            type: "bar",
            label: {
              normal: {
                position: "inside",
                show:true
              }
            },
            data: [
             10
            ]
          },
          {
            name: "故障",
            type: "bar",
            label: {
              normal: {
                position: "inside",
                show:true
              }
            },
            data: [
              5
            ]
          },
          {
            name: "困人",
            type: "bar",
            label: {
              normal: {
                position: "inside",
                show:true
              }
            },
            data: [
              3
            ]
          },
         
            
        ],
      }
    };
  },
  components: {},
  created() {
    this.getAreaData()
  },
  mounted() {
    this.width = document.documentElement.clientWidth - 250 + "px";
    this.height = document.documentElement.clientHeight  -250 +"px";
    console.log("documentheight", document.documentElement.clientHeight);
    window.onresize = () => {
      this.width = document.documentElement.clientWidth - 250 + "px";
      this.height = document.documentElement.clientHeight -250 + "px";
    };
    this.$nextTick(() => {
      this.getData();
    });
   
  },
  methods: {
    getData() {
      this.chart = echart.init(document.getElementById("chartBox"),'light');
      this.chart.setOption(this.option);
       window.addEventListener("resize", () => {
        this.chart.resize();
      });
    },
    getAreaData(){
       this.$http({
        url:this.$http.adornUrl('/district/district/alllist'),
        method:'get',
        params:this.$http.adornParams({})
      }).then(({data})=>{
        if(data&&data.code==0){
          console.log('地区数据',data.list)
          let areaData = [];
          data.list.forEach(item=>{
            let city = [];
            item.sonLevel.forEach(value=>{
              let area = [];
              value.sonLevel.forEach(lump=>{
                area.push({
                  value:lump.id,
                  label:lump.districtName
                }) 
              })
              city.push({
                  value:value.id,
                  label:value.districtName,
                  children:area
              }) 
             
            })
            areaData.push({
              value:item.id,
              label:item.districtName,
              children:city
            })
          })
          this.areaData = areaData;
          console.log('处理后的data',areaData);
        }
      }).catch(e=>{
        console.log(e);
      })
    },
     handleChange(e){
       console.log('change',e)
    },
     pickStimeEtime(t) {
      console.log('282',t)
      if(t){
         this.formData.stime=t[0]
        this.formData.etime=t[1]
      }else {
         this.formData.stime=''
        this.formData.etime=''
      }
    }
  },
 
}
</script>
<style >
</style>
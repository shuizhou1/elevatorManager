<template>
  <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
    :modal="false"
    :visible.sync="visible"
    :v-loading="loading"
  >
    <div slot="title">{{!this.formData.id ? '新增' : '修改'}}</div>
    <div class="form_wraper">
      <el-form
        ref="form"
        :model="formData"
        :rules="rules"
        class="form"
        style="margin-left:10px"
        label-width="auto"
      >
        <el-row :gutter="20">
          <el-col :span="7">
            <el-form-item label="维保单位" prop="maintenanceName">
              <el-input v-model="formData.maintenanceName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="1">
            <el-button @click="selectMaintenanceUnit">选择</el-button>
          </el-col>
          <el-col :span="7" :offset="1">
            <el-form-item label="联系人" prop="contactName">
              <el-input v-model="formData.contactName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="联系人电话" prop="contactPhone">
              <el-input v-model="formData.contactPhone"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="20">
          <el-col :span="7">
            <el-form-item label="预约维保时间" prop="maintenanceTime">
              <el-date-picker
                v-model="formData.maintenanceTime"
                format="yyyy 年 MM 月 dd 日"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
              ></el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="电梯注册码" prop="regCodes">
              <el-input v-model="formData.regCodes"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="20">
          <el-col :span="24">
            <el-form-item label="通知详情" prop="remarks">
              <el-input
                type="textarea"
                :autosize="{ minRows: 2, maxRows: 3}"
                v-model="formData.remarks"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
    </div>
    <div class="button_wraper">
      <el-button type="back" @click="handleselectElevator()">选择维保电梯</el-button>
      <el-button type="warning" @click="handleselectContact()" style="margin-left:20px">选择联系人</el-button>
      <el-button type="primary" @click="formSubmit()" style="margin-left:20px">通知</el-button>
      <el-button @click="visible=false" style="margin-left:20px">返回</el-button>
    </div>
    <div class="button_wraper" v-if="unitName=='物业'">
      <el-button type="back" @click="handleselectElevator()">查看维保电梯</el-button>
      <el-button type="primary" @click="handleConfirm()" style="margin-left:20px">确认</el-button>
      <el-button type="warning" @click="handleReappointment()" style="margin-left:20px">请重新预约</el-button>
      <el-button @click="visible=false" style="margin-left:20px">返回</el-button>
    </div>
    <select-elevator
      v-if="showElevatorselectDialog"
      ref="elevatorSelector"
      @confirm="elevatorselectConfirm"
    ></select-elevator>
    <select-contact
      v-if="showContactselectDialog"
      ref="contactSelector"
      @confirm="contactselectConfirm"
    ></select-contact>
    <select-maintenance-unit
      v-if="showMaintenanceunitselctDialog"
      ref="maintenanceunitSelector"
      @confirm="selectMaintenanceuniConfirm"
    ></select-maintenance-unit>
  </el-dialog>
</template>
<script>
import selectElevator from "@/components/selectElevator.vue";
import selectContact from "@/components/selectContact.vue";
import selectMaintenanceUnit from "@/components/selectmaintenanceunit.vue";

import { isMobile, isPhone } from "@/utils/validate";
export default {
  components: {
    selectElevator,
    selectContact,
    selectMaintenanceUnit
  },
  data() {
    var validateMobile = (rule, value, callback) => {
      if (isMobile(value) || isPhone(value)) {
        callback();
      } else {
        callback("联系人电话格式有误");
      }
    };
    return {
      visible: false,
      loading: false,
      formData: {
        maintenanceName: "", //维保单位
        maintenanceId: "",
        contactName: "", //维保联系人
        contactPhone: "", //联系人电话
        maintenanceTime: "", //预约时间
        remarks: "", //通知
        regCodes: "", //电梯注册码
        userIds: "" //通知人id
      },
      showElevatorselectDialog: false, //显示电梯选择
      showContactselectDialog: false,
      showMaintenanceunitselctDialog: false, //维保单位
      addRules: {
        maintenanceName: [
          {
            required: true,
            message: "维保单位不能为空"
          }
        ],
        contactName: [
          {
            required: true,
            message: "联系人不能为空"
          }
        ],
        contactPhone: [
          {
            required: true,
            message: "联系人电话不能为空"
          },
          {
            validator: validateMobile
          }
        ],
        maintenanceTime: [
          {
            required: true,
            message: "预约维保时间不能为空"
          }
        ],
        remarks: [
          {
            required: true,
            message: "通知详情不能为空"
          }
        ],
        regCodes: [
          {
            required: true,
            message: "请选择维保电梯"
          }
        ]
      },
      rules: {}
    };
  },
  computed: {
    unitName() {
      console.log("userInfo", this.$store.getters["user/userInfo"]);
      return this.$store.getters["user/userInfo"].unitName;
    }
  },
  methods: {
    init(id) {
      console.log("id", id);
      console.log("formData", this.formData);
      this.formData.id = id;
      this.visible = true;
      this.$nextTick(() => {
        this.$refs["form"].resetFields();
        if (this.formData.id) {
          this.loading = true;
          this.$http({
            url: this.$http.adornUrl(
              `/maintenancereservation/maintenancereservation/info/${this.formData.id}`
            ),
            method: "get",
            params: this.$http.adornParams()
          }).then(({ data }) => {
            console.log(data);
            if (data && data.code == 0) {
              this.loading = false;
              console.log(data);
              this.formData = data.maintenanceReservation;
            }
          });
        } else {
          this.rules = this.addRules;
        }
      });
    },
    handleselectElevator() {
      this.showElevatorselectDialog = true;
      this.$nextTick(() => {
        this.$refs.elevatorSelector.init();
      });
    },
    // 确认选择
    elevatorselectConfirm(val) {
      console.log("确认选择", val);
      this.formData.regCodes = val.map(item => item.regcode).join(",");
      // this.formData.locals = val.locals;
      console.log(this.formData.regCodes);
    },
    handleselectContact() {
      this.showContactselectDialog = true;
      this.$nextTick(() => {
        this.$refs.contactSelector.init();
      });
    },
    contactselectConfirm(val) {
      console.log("联系人", val);
      this.formData.contactName = val[0].nickname;
      this.formData.contactPhone = val[0].mobile;
      this.formData.userIds = val.map(item => item.userId).join(",");
    },
    // 选择维保单位
    selectMaintenanceUnit() {
      this.showMaintenanceunitselctDialog = true;
      this.$nextTick(() => {
        this.$refs.maintenanceunitSelector.init(this.formData.maintenanceId);
      });
    },
    selectMaintenanceuniConfirm(val) {
      console.log("确认选择", val);
      this.formData.maintenanceId = val.id;
      this.formData.maintenanceName = val.unitName;
    },
    // 提交表单
    formSubmit() {
      console.log(248);
      this.loading = true;
      this.$refs["form"].validate(valid => {
        if (valid) {
          this.$http({
            url: this.$http.adornUrl(
              `/maintenancereservation/maintenancereservation/${
                !this.formData.id ? "save" : "update"
              }`
            ),
            method: "post",
            data: this.$http.adornData(this.formData)
          })
            .then(({ data }) => {
              console.log("formsubmitssucsss", data);
              if (data && data.code == 0) {
                this.loading = false;
                this.$message({
                  type: "success",
                  message: "保存成功",
                  duration: 1500,
                  onClose: () => {
                    this.visible = false;
                    this.$refs["form"].resetFields();
                    this.$emit("refreshDataList");
                  }
                });
              }
            })
            .catch(e => {
              console.log(e);
            });
        }
      });
    },

    handleConfirm() {
      // 预约确认
      this.formData.reservationStatus = 1;
      this.formSubmit();
    },
    // 重新预约
    handleReappointment() {
      this.formData.reservationStatus = 0;
      this.formSubmit();
    }
  }
};
</script>
<style  scoped>
</style>
<template>
  <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
    :modal="false"
    :visible.sync="visible"
    :v-loading="loading"
  >
    <div slot="title">{{!this.formData.id ? '新增' : '修改'}}</div>
    <el-form
      :model="formData"
      :rules="rules"
      ref="dataForm"
      @keyup.enter.native="dataFormSubmit()"
      class="form"
      label-width="auto"
    >
     <el-row :gutter="30">
          <el-col :span="8">
            <el-form-item label="电梯注册码" prop="regCode">
              <el-input v-model="formData.regCode"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="电梯地址" prop="local">
              <el-input v-model="formData.local"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="电梯类型" prop="elevatorStatus">
              <el-input v-model="formData.elevatorStatus"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="30">
          <el-col :span="8">
            <el-form-item label="维保单位" prop="maintenanceName">
              <el-input v-model="formData.maintenanceName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="1">
            <el-button @click="">选择</el-button>
          </el-col>
          <el-col :span="8" :offset="1">
            <el-form-item label="物业单位" prop="propertyName">
              <el-input v-model="formData.propertyName"></el-input>
            </el-form-item>
          </el-col>
           <el-col :span="1">
            <el-button>选择</el-button>
          </el-col>
        </el-row>
        <el-row :gutter="30">
          <el-col :span="8">
            <el-form-item label="仓库单位" prop="depotName">
              <el-input v-model="formData.depotName"></el-input>
            </el-form-item>
          </el-col>
           <el-col :span="1">
            <el-button>选择</el-button>
          </el-col>
          <el-col :span="8" :offset="1">
            <el-form-item label="业主单位" prop="ownerName">
              <el-input v-model="formData.ownerName"></el-input>
            </el-form-item>
          </el-col>
           <el-col :span="1">
            <el-button>选择</el-button>
          </el-col>
        </el-row>
    </el-form>
    <div class="footer">
        <el-button type="primary" @click="dataFormSubmit" style="margin-right:20px">确认</el-button>
        <el-button @click="visible=false" style="margin-left:20px">返回</el-button>
    </div>
    <select-maintenance-unit
      v-if="showMaintenanceunitselctDialog"
      ref="maintenanceunitSelector"
      @confirm="selectMaintenanceuniConfirm"
    ></select-maintenance-unit>
  </el-dialog>
</template>

<script>
import { isMobile, isPhone } from "@/utils/validate";
import selectMaintenanceunit from '@/components/selectmaintenanceunit'
export default {
  components:{
    selectMaintenanceunit
  },
  data() {
    var validateMobile = (rule, value, callback) => {
      if (isMobile(value) || isPhone(value)) {
        callback();
      } else {
        callback("申请人联系电话格式有误");
      }
    };

    return {
      loading:false,
      visible: false,
      type: "", //电梯类型
      formData: {
        regCode:'',
        elevatorStatus:'',//电梯类型
        local:'',//电梯地址
        maintenanceId:'',//维保单位id
        maintenanceName:'',
        propertyId:'',//物业单位id
        propertyName:'',
        depotId:'',//仓库单位id
        depotName:'',
        ownerId:'',//业主id
        ownerName:''
      },
      rules: {},
      addRules: {
        regCode:[
          {
            required: true,
            message: "电梯注册码不能为空",
            trigger:'blur'
          }
        ],
        elevatorStatus:[
          {
            required: true,
            message: "请选择电梯类型",
            trigger:'blur'
          }
        ],//电梯类型
        local:[
          {
            required: true,
            message: "电梯地址不能为空",
            trigger:'blur'
          }
        ],//电梯地址
        maintenanceName:[
          {
            required: true,
            message: "维保单位不能为空",
            trigger:'blur'
          }
        ],//维保单位id
       
        propertyName:[
          {
            required: true,
            message: "物业单位不能为空",
            trigger:'blur'
          }
        ],//物业单位id
        
        depotName:[
          {
            required: true,
            message: "仓库单位不能为空",
            trigger:'blur'
          }
        ],
        ownerName:[
          {
            required: true,
            message: "业主单位不能为空",
            trigger:'blur'
          }
        ],//业主id
      }
    };
  },
 
  methods: {
    init(id) {
      console.log("id", id);
      this.formData.id = id;
      this.visible = true;
      this.$nextTick(() => {
        // console.log(this.$refs["formData"])
         this.$refs['dataForm'].resetFields();
       
        if (this.formData.id) {
          this.loading = true;
          this.$http({
            url: this.$http.adornUrl(
              `/elevatorinformation/elevatorinformation/${this.formData.id}`
            ),
            method: "get",
            params: this.$http.adornParams()
          }).then(({ data }) => {
            console.log(data);
            if (data && data.code == 0) {
              this.loading = false;
              console.log(data);
             
            }
          });
        } else {
          // 新增添加rules
          this.rules = this.addRules;
        }
      });
    },
    // 表单提交
    dataFormSubmit() {
      console.log('formsubmit')
      this.$refs["dataForm"].validate(valid => {
        if (valid) {
          this.$http({
            url: this.$http.adornUrl(
              `/elevatorinformation/elevatorinformation/${!this.formData.id ? "save" : "update"}`
            ),
            method: "post",
            data: this.$http.adornData(this.formData)
          }).then(({ data }) => {
            if (data && data.code === 0) {
              this.$message({
                message: "操作成功",
                type: "success",
                duration: 1500,
                onClose: () => {
                  this.visible = false;
                  this.$emit("refreshDataList");
                }
              });
            } else {
              this.$message.error(data.error);
            }
          });
        }
      });
    }
  }
};
</script>
<style scoped>
.footer{
  text-align: center !important;
  margin-top: 20px; 
  padding-bottom: 10px;
}
</style>
<template>
  <div class="mod-config">
    <el-form :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">       
  <el-form
    :model="dataForm"
    @keyup.enter.native="getChartBar"
    class="form"
    style="margin-left:10px"
  >
    <el-row :gutter="40">
      <el-col :span="8">
      </el-col>
      <el-col :span="9">
       <el-form-item label prop="setime" >
          <el-date-picker
            clearable
            v-model="dataForm.setime"
            type="datetimerange"
            @change="pickStimeEtime"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            value-format="yyyy-MM-dd HH:mm:ss"
          ></el-date-picker>
        </el-form-item>
      </el-col>
       <el-col :span="4">
        <el-button @click="getDataList" type="query">查询</el-button>
      </el-col>
    </el-row>
  </el-form>
    </el-form>
    <el-table @row-dblclick="dbclickRow"
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
     <!-- <el-table-column
        type="selection"
        header-align="center"
        align="center"
        width="50">
      </el-table-column>
    -->
      <el-table-column
        prop="week"
        header-align="center"
        align="center"
        label="星期">
      </el-table-column>
      <el-table-column
        prop="date"
        header-align="center"
        align="center"
        label="日期"
				:formatter="formatDate"
				>
      </el-table-column>
    <!--  <el-table-column
        prop="humidity"
        header-align="center"
        align="center"
        label="湿度"> -->
      </el-table-column>
      <el-table-column
        prop="temperature"
        header-align="center"
        align="center"
        label="温度">
      </el-table-column>
     <!-- <el-table-column
        prop="pollution"
        header-align="center"
        align="center"
        label="污染程度"> -->
      </el-table-column>
      <el-table-column
        prop="maxtemperature"
        header-align="center"
        align="center"
        label="最高温度">
      </el-table-column>
      <el-table-column
        prop="mintemperature"
        header-align="center"
        align="center"
        label="最低温度">
      </el-table-column>
      <el-table-column
        prop="wind"
        header-align="center"
        align="center"
        label="风向">
      </el-table-column>
      <el-table-column
        prop="windlevel"
        header-align="center"
        align="center"
        label="风级">
      </el-table-column>
      <el-table-column
        prop="type"
        header-align="center"
        align="center"
        label="天气情况">
      </el-table-column>
      <el-table-column
        prop="city"
        header-align="center"
        align="center"
        label="城市">
      </el-table-column>
     <!-- <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
        <template slot-scope="scope">
          <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.id)">修改</el-button>
          <el-button type="text" size="small" @click="deleteHandle(scope.row.id)">删除</el-button>
        </template>
      </el-table-column> -->
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
  <!--  <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update> -->
  </div>
</template>

<script>
 /* import AddOrUpdate from './weather-add-or-update' */
  export default {
    data () {
      return {
        dataForm: {
					predate:"",
					beforedate:""
				},
				setime: [],
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false
      }
    },
    components: {
     /* AddOrUpdate */
    },
    activated () {
      this.getDataList()
    },
    methods: {
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        this.$http({
          url: this.$http.adornUrl('/weather/weather/list'),
          method: 'get',
          params: this.$http.adornParams({
            'page': this.pageIndex,
            'limit': this.pageSize,
						'predate': this.dataForm.predate,
						'beforedate': this.dataForm.beforedate
          })
        }).then(({data}) => {
          if (data && data.code === 0) {
            this.dataList = data.page.list
            this.totalPage = data.page.totalCount
          } else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
        })
      },
			  pickStimeEtime(t) {
			    console.log('282',t)
			    if(t){
			       this.dataForm.predate=t[0]
			      this.dataForm.beforedate=t[1]
			    }else {
			       this.dataForm.predate=''
			      this.dataForm.beforedate=''
			    }
			  }
			,
			 formatDate(row, column, cellValue) {
			  if (cellValue && cellValue.length) return cellValue.substr(0, 10);
			},
      dbclickRow(row,index){
         alert("双击具体业务你自己实现,我把 row交给你了");
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      }/* ,
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        this.$nextTick(() => {
          this.$refs.addOrUpdate.init(id)
        })
      }, */
      // 删除
    /*  deleteHandle (id) {
        var ids = id ? [id] : this.dataListSelections.map(item => {
          return item.id
        })
        this.$confirm(`确定对[id=${ids.join(',')}]进行[${id ? '删除' : '批量删除'}]操作?`, '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.$http({
            url: this.$http.adornUrl('/weather/weather/delete'),
            method: 'post',
            data: this.$http.adornData(ids, false)
          }).then(({data}) => {
            if (data && data.code === 0) {
              this.$message({
                message: '操作成功',
                type: 'success',
                duration: 1500,
                onClose: () => {
                  this.getDataList()
                }
              })
            } else {
              this.$message.error(data.msg)
            }
          })
        })
      } */
    }
  }
</script>

<!--  -->
<template>
  <div>
    <el-dialog
      :close-on-click-modal="false"
      :show-close="false"
      :fullscreen="true"
      title="详情"
      :modal="false"
      :visible.sync="visible"
      :v-loading="loading"
    >
      <div class="dialog_headslot" slot="title">
        <div>部件维护情况</div>
        <el-button @click="visible=false" style="margin-right:20px">返回</el-button>
      </div>

      <el-form
        ref="form"
        class="dialog_head_form"
        :model="formData"
        label-width="auto"
        @keyup.enter.native="getDataList('init')"
      >
        <el-row :gutter="20">
          <el-col :span="7">
            <el-form-item label="开始时间" prop="stime">
              <el-date-picker
                clearable
                v-model="formData.stime"
                format="yyyy 年 MM 月 dd 日"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
              ></el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="7">
            <el-form-item label="结束时间" prop="etime">
              <el-date-picker
                clearable
                v-model="formData.etime"
                format="yyyy 年 MM 月 dd 日"
                value-format="yyyy-MM-dd HH:mm:ss"
                type="datetime"
              ></el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="6">
            <el-button type="primary" @click="getDataList('init')">查询</el-button>
          </el-col>
        </el-row>
      </el-form>
      <el-table :data="tableData" border style="width: 100%">
        <el-table-column type="index" align="center" fixed width="50"></el-table-column>
        <el-table-column prop="createUserName" align="center" label="创建人"></el-table-column>
        <el-table-column prop="createTime" align="center" :formatter="formatDate" label="维护时间"></el-table-column>
        <el-table-column
          prop="maintenanceStatus"
          align="center"
          :formatter="formatMaintenanceStatus"
          label="维护情况"
        ></el-table-column>
        <el-table-column prop="checkLeaderUserName" align="center" label="班长"></el-table-column>
        <el-table-column
          prop="checkLeaderTime"
          align="center"
          :formatter="formatDate"
          label="班长确认时间"
        ></el-table-column>
        <el-table-column prop="checkDirectorUserName" align="center" label="主任"></el-table-column>
        <el-table-column
          prop="checkDirectorTime"
          align="center"
          :formatter="formatDate"
          label="主任确认时间"
        ></el-table-column>
        <el-table-column
          prop="checkStatus"
          align="center"
          :formatter="formatStatus"
          width="100"
          label="状态"
        ></el-table-column>
        <el-table-column prop="checkFailRemark" align="center" show-overflow-tooltip label="不通过原因"></el-table-column>
        <!-- <el-table-column prop="maintenanceStatus" :formatter="formatStatus" label="状态"></el-table-column> -->
        <el-table-column
          label="操作"
          header-align="center"
          align="center"
          width="100"
          v-if="isAuth('selfmaintenanceplancontent:selfmaintenanceplancontent:check')"
        >
          <template slot-scope="scope">
            <!-- <el-button
                v-if="scope.row.checkStatus==='1' && isAuth('selfmaintenanceplancontent:selfmaintenanceplancontent:check')"
                size="mini"
                style="padding:8px 10px;font-size:12px;height:36px"
                type="primary"
                @click="handlePass(scope.row.id)"
            >审核通过</el-button>-->
            <el-button
              :disabled="scope.row.checkStatus!='1' "
              size="mini"
              style="padding:8px 10px;font-size:12px;height:36px"
              type="warning"
              @click="showCheckRemark(scope.row.id)"
            >审核</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!-- <el-form ref="detailform" :model="detailFormData" :rules="rules" class="form">
        <el-row :gutter="30">
          <el-col :span="12">
            <el-form-item label="本月自主维护内容编制人员" prop="planUserName">
              <el-input v-model="detailFormData.planUserName" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="本月自主维护内容审核人" prop="planTime" clearable>
              <el-input v-model="detailFormData.checkUserName" clearable></el-input>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>-->
      <div class="pagination_wraper">
        <el-pagination
          layout="total, sizes, prev, pager, next, jumper"
          :total="totalCount"
          @size-change="sizeChangeHandle"
          @current-change="currentChangeHandle"
          :page-sizes="[5,10,20,50]"
          :page-size="pageSize"
        ></el-pagination>
      </div>
      <div class="button_wraper">
        <!-- <el-button type="primary" @click="handleSave" style="margin-right:20px">保存</el-button> -->
        <!-- <el-button type="primary" @click="handleApply" style="margin-right:20px">维修工单申请</el-button> -->
        <!-- <el-button type="back" @click="updateStatus" style="margin-right:20px">审核通过</el-button> -->
        <!-- <el-button type="danger" @click="updateStatus" style="margin-right:20px">审核不通过</el-button> -->
        <!-- <el-button type="primary" v-if="formData.propertyId" @click="handleExport()" style="margin-left:20px">导出保养记录</el-button> -->
      </div>
    </el-dialog>
    <audit-component v-if="dispassresonVisible" ref="audit" @confirm="handleAuditConfirm"></audit-component>
  </div>
</template>

<script>
import auditComponent from "@/components/audit.vue";

export default {
  components: {
    auditComponent
  },
  data() {
    return {
      dispassresonVisible: false,
      checkFailRemark: "",
      pageSize: 10,
      pageIndex: 1,
      totalCount: 0,
      loading: false,
      visible: false,
      tableData: [],
      contentId: "",
      planId: "",
      checkId: "",
      formData: {
        stime: "",
        etime: "",
        checkFailRemark: ""
      }
    };
  },
  created() {},
  methods: {
    init(planId, contentId) {
      this.visible = true;
      this.planId = planId;
      this.contentId = contentId;
      console.log("pid", planId);
      console.log("cid", contentId);
      this.$nextTick(() => {
        this.$refs["form"].resetFields();
      });
      this.getDataList();
    },
    getDataList(type) {
      if ((type = "init")) {
        this.pageIndex = 1;
      }
      this.loading = true;
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/list`
        ),
        method: "get",
        params: this.$http.adornParams({
          planId: this.planId,
          contentId: this.contentId,
          stime: this.formData.stime,
          etime: this.formData.etime,
          limit: this.pageSize,
          page: this.pageIndex
        })
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log("data-----", data);
            this.tableData = data.page.list;
            this.totalCount = data.page.totalCount;
            this.loading = false;
            // this.formData = data.plan;
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    },
    //每页数改变
    sizeChangeHandle(e) {
      this.pageSize = e;
      this.pageIndex = 1;
      this.getDataList();
    },
    // 当前页
    currentChangeHandle(e) {
      this.page = e;
      this.getDataList();
    },
    formatStatus(value) {
      if (value.checkStatus === "1") {
        return "待审核";
      }
      if (value.checkStatus === "2") {
        return "通过";
      }
      if (value.checkStatus === "3") {
        return "不通过";
      }
    },
    formatMaintenanceStatus(value) {
      if (value.maintenanceStatus === "1") {
        return "正常";
      }
      if (value.maintenanceStatus === "2") {
        return "已填写维修工单";
      }
      if (value.maintenanceStatus === "3") {
        return "自主修复";
      }
      if (value.maintenanceStatus === "4") {
        return "停产";
      }
    },
    showCheckRemark(id) {
      console.log(" showCheckRemark", id);
      this.id = id;
      this.dispassresonVisible = true;
      this.$nextTick(() => {
        this.$refs.audit.init();
      });
    },
    handleAuditConfirm(obj) {
      console.log("handleAuditConfirm", obj);
      // this.auditStatus = obj.auditStatus;
      if (obj.auditStatus == 1) {
        this.handlePass();
      } else {
        this.formData.checkFailRemark = obj.reason;
        this.handleDisPass();
      }
    },
    handlePass() {
      this.loading = true;
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/check`
        ),
        method: "post",
        params: this.$http.adornParams({
          id: this.id
        })
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            if (data.msg=='hasAudit') {
              this.$message({
                type: "warning",
                message: "你已审核过一次",
                duration: 1500
              });
            } else {
              console.log("data-----", data);
              this.getDataList();
              // this.formData = data.plan;
              this.loading = false;
              this.$message({
                type: "success",
                message: "保存成功",
                duration: 1000,
                onClose: () => {
                  this.dispassresonVisible = false;
                }
              });
            }
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    },
    // 格式化时间
    formatDate(row, column, cellValue) {
      if (cellValue && cellValue.length) return cellValue.substr(0, 10);
    },
    handleDisPass(id) {
      console.log(" handleDisPass", id);
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/check`
        ),
        method: "post",
        params: this.$http.adornParams({
          id: this.id,
          checkFailRemark: this.formData.checkFailRemark
        })
      })
        .then(({ data }) => {
          this.loading = false;
          if (data && data.code == 0) {
            if (data.msg=='hasAudit') {
              this.$message({
                type: "warning",
                message: "你已审核过一次",
                duration: 1500
              });
            } else {
              console.log("data-----", data);
              this.getDataList();
              // this.formData = data.plan;
              this.$message({
                type: "success",
                message: "保存成功",
                duration: 1000,
                onClose: () => {
                  this.dispassresonVisible = false;
                }
              });
            }
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    }
  }
};
</script>
<style  scoped>
</style>
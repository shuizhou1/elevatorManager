<!--  -->
<template>
  <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
    :modal="false"
    :visible.sync="visible"
    :v-loading="loading"
  >
    <!-- 维保记录表 -->
    <!-- <div class="repair_header">
      <div class>电梯设备</div>
      <el-button @click="showElevatorList" style="height:36px" v-if="!this.formData.id">选择</el-button>
    </div>
    <div class="form-view-wraper">
      <el-row>
        <el-col :span="8">
          <div class="form-view-item">
            电梯注册码：
            <span>{{formData.regCodes}}</span>
          </div>
        </el-col>
        <el-col :span="8">
          <div class="form-view-item">
            维保单位：
            <span>{{formData.maintenanceName}}</span>
          </div>
        </el-col>
      </el-row>
      <el-row>
        <el-col :span="8">
          <div class="form-view-item">
            电梯类型：
            <span>{{type}}</span>
          </div>
        </el-col>
        <el-col :span="16">
          <div class="form-view-item">
            电梯地址：
            <span>{{formData.local}}</span>
          </div>
        </el-col>
      </el-row>
    </div> -->
    <div class="form_wraper">
      <div class="repair_header">
        <div class>检查项目</div>
      </div>
      <el-form ref="form" :model="formData" :rules="rules" class="form">
        <el-row :gutter="30">
          <!-- <el-col :span="8">
            <el-form-item label="本岗位自主维护人员" prop="processUserName">
              <el-input v-model="formData.processUserName" clearable></el-input>
            </el-form-item>
          </el-col> -->
          <el-col :span="12">
            <el-form-item label="本月自主维护内容编制人员" prop="planUserName">
              <el-input v-model="formData.planUserName" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="本月自主维护内容审核人" prop="planTime" clearable>
              <el-input v-model="formData.checkUserName" clearable></el-input>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
    </div>
    <!-- 维保各项情况表 -->
    <el-table :data="contentData" border style="width: 100%" :row-click="handleRowClick">
      <el-table-column type="index" width="30"></el-table-column>
      <el-table-column prop="deviceName" label="设备名称"></el-table-column>
      <el-table-column prop="device" label="定点"></el-table-column>
      <el-table-column prop="deviceStandard" label="定标"></el-table-column>
      <el-table-column prop="deviceStatus" label="状态" width="50"></el-table-column>
      <el-table-column prop="deviceMethod" label="定法"></el-table-column>
      <el-table-column prop="technologyStandard" label="技术指导标准"></el-table-column>
      <el-table-column prop="acceptanceStandard" label="验收指导标准"></el-table-column>
      <el-table-column prop="cycle" label="周期"  width="50"></el-table-column>
      <el-table-column prop="squad" label="班别"  width="50"></el-table-column>
      <el-table-column prop="wbqk" label="操作" width="250">
        <template :slot-scope="scope">
          <el-button
                size="mini"
                style="padding:8px 10px;font-size:12px;height:36px"
                type="primary"
                 v-if="isAuth()"
                @click="handleMaintenance(scope.row.repairid)"
              >维护</el-button>
         
        </template>
      </el-table-column>
    </el-table>
    <div class="button_wraper">
      <el-button type="primary" @click="handleSave" style="margin-right:20px">保存</el-button>
      <el-button  @click="visible=false" style="margin-right:20px">返回</el-button>
    </div>
    <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    top="50%"
    :modal="false"
    :visible.sync="selectVisible"
    :v-loading="loading"
  >
    <div>
       <el-radio-group
            @change="handleRadioChange"
          >
            <el-radio label="1">正常</el-radio>
            <el-radio label="2">已填写维修工单</el-radio>
            <el-radio label="3">自主修复</el-radio>
            <el-radio label="4">停产</el-radio>
          </el-radio-group>
          <div class="button_wraper">
           <el-button type="primary" @click="updateStatus" style="margin-right:20px">确定</el-button>
            <el-button  @click="selctVisible=false" style="margin-right:20px">取消</el-button>
          </div>
    </div>
    </el-dialog>
    <set-item v-if="setitemDialogVisible" ref="setItem" @back="setItemConfirm"></set-item>
    <elevator-selector
      v-if="elevatorDalogvisible"
      ref="elevatorSelector"
      @confirm="elevatorselectConfirm"
    ></elevator-selector>
  </el-dialog>
</template>

<script>
import setItem from "./selfmaintenance-setitem";
import elevatorSelector from "@/components/select-single-elevator.vue";
export default {
   components: {
    setItem,
    elevatorSelector
  },
  data() {
    return {
      loading:false,
      selectVisible:false,
      setitemDialogVisible: false,
      elevatorDalogvisible: false,
      visible:false,
      currentIndex:1,
      contentData:[],//内容
      contentIdWithStatus:[],//内容选择结果
      contentId:'',//当前conetntid
      formData: {
        processUserId: "", //自主维护人员
        processUserName: "", //自主维护人员
        planUserId: "", //自主维护编制人员
        planUserName: "", //自主维护编制人员
        checkUserId: "", //编制确认人
        regCodes: "", //电梯注册码
        remarks: "" ,//备注
        elevatorStatus:'',
      },
      type:'',
      rules: {
        processUserName: [{
          required:true,
          message:'自主维护人员不能为空',
          trigger:'blur'
        }], //自主维护人员
        planUserName:  [{
          required:true,
          message:'内容编制人员不能为空',
          trigger:'blur'
        }], //自主维护编制人员
        regCodes:  [{
          required:true,
          message:'请选择电梯',
          trigger:'blur'
        }]//电梯注册码
      }
    };
  },
  computed:{
    unitType(){
      return this.$store.getters['user/userInfo'].unitType;
    }
  },
  watch: {
    "formData.elevatorStatus"(val) {
      console.log("watch200");
      if (val == 1) {
        this.type = "客梯";
      } else if(val == 2){
        this.type = "货梯";
      }else {
        this.type = ''
      }
    },
    contentIdWithStatus(val){
      console.log('contentIdWithStatus',val);
      if(val&&val.length){
        let arr = [];
        this.tableData.forEach(item=>{
          if(val.indexOf(item.id)>-1){
            console.log('true');
            arr.push(item);
          }
        })
        console.log('内容改变',arr);
        this.contentData = arr;
      }
    }
  },
  methods: {
    // 维保记录
    init(id) {
      // 维保内容列表数据
      console.log('id',id)
      if(id){
        this.formData.id = id;
        this.getDataList()
      }
      this.visible = true;
    },
    getDataList() {
      console.log("维保记录");
      this.loading = true;
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplan/selfmaintenanceplan/info/${this.formData.id}`
        ),
        method: "get"
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log(data);
            this.loading = false;
            this.formData = data.plan;
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    },
     getTableData() {
      console.log("维保记录");
      // this.tableLoading = true;
      this.$http({
        url: this.$http.adornUrl("/selfmaintenancecontent/selfmaintenancecontent/list"),
        method: "get",
        data: this.$http.adornParams({
          limit: this.pageSize,
          page: this.pageIndex
        })
      }).then(({ data }) => {
        if (data && data.code == 0) {
          console.log('内容',data.list);
          this.tableData = data.list;
        }
      });
    },
    tableRowClassName({row, rowIndex }) {
      row.index = rowIndex;
      // return "";
    },
    // 格式化时间
    formatDate(row, column, cellValue) {
      if (cellValue && cellValue.length) return cellValue.substr(0, 10);
    },
    handleRadioChange(row, index) {
      console.log(row);
      console.log("handleRadioChange", this.formData);
    },
    // 点击改变当前行
    handleRowClick(row){
      console.log('rowclick',row);
      // this.planId = row.planId;
      // this.currentIndex = row.index;
      // this.loading = true;
      // this.getwbjlData();
    },
    handleSave(formName) {
      console.log("formsubmit", this.formData);
      this.$refs["form"].validate(valid => {
        this.formData.contentIds =  this.contentIdWithStatus.join(',');
        if (valid) {
          this.$http({
            url: this.$http.adornUrl("/maintenanceplan/maintenanceplan/update"),
            method: "post",
            data: this.formData
          })
            .then(res => {
              console.log("formsubmitssucsss", res);
              if (res.data.code == 0) {
                console.log();
                this.$message({
                  type:'success',
                  message: "保存成功",
                  duration:1500,
                  onClose:()=>{
                    this.getlastthreeData();
                    this.getwbjlData(this.planId);
                  }

                });
              }
            })
            .catch(e => {
              console.log(e);
            });
        }
      });
    },
    handleMaintenance(id){
      this.selectVisible = true;
      this.contentId = id;
    },
    // 申请维修
    handleApply(){

    },
    // 更新状态
    updateStatus(){

    }
  }
};
</script>
<style scoped>
.repair_header {
  font-size: 18px;
  padding: 8px 10px;
  margin-bottom: 1px solid #eee;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
</style>
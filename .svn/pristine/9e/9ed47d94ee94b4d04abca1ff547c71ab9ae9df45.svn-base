<template>
<el-container style="height: 100%; ">
    <div class="mod-config" style="width: 50%;border: 1px solid #eee;">
       <el-form  :inline="true" class="form" :model="dataForm" @keyup.enter.native="getDataList('init')">
        <el-form-item class="none_margin_bottom" label="单位名称" prop="unitName"  >
        <el-input v-model="dataForm.unitName" clearable></el-input>
        </el-form-item>
        <el-form-item  label="联系人" prop="contactName">
        <el-input v-model="dataForm.contactName" clearable ></el-input>
        </el-form-item>
      <el-form-item class="none_margin_bottom">
        <el-button type="query" size="small" @click="getDataList('init')">查询</el-button>
          <el-button type="add" size="small" @click="addOrUpdateHandle()">新增</el-button>
          <el-button type="delete" :disabled="!dataListSelections.length"  size="small" @click="deleteHandle()">移除</el-button>
      	<!-- <e-button ref="eproButton" v-on:handleClick="handleClick" :parentId="'61'" :busType="'query'" ></e-button> -->
      </el-form-item>
    </el-form>
    <el-table @row-dblclick="dbclickRow" @row-click="handdle"
      :data="dataList"
      border
      max-height="450"
      v-loading="dataListLoading"
      highlight-current-row=""
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <el-table-column   type="selection"    header-align="center" align="center" width="50" show-overflow-tooltip></el-table-column>
      <el-table-column prop="unitName" label="单位名称" align="center" show-overflow-tooltip></el-table-column>
      <el-table-column prop="address" label="单位地址" align="center" show-overflow-tooltip></el-table-column>
      <el-table-column prop="contactName" label="联系人" align="center"></el-table-column>
      <el-table-column prop="contactPhone" label="联系电话" align="center"></el-table-column>
      <!-- <el-table-column prop="createTime" label="添加日期" align="center"></el-table-column> -->
      <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
        <template slot-scope="scope">
         <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.id)">修改</el-button>
          <el-button type="text" size="small" @click="deleteHandle(scope.row.id)">移除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[5,10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
    <peopleAdd v-if="peopleDialogVisible" ref="peopleAdd" @refreshDataList="refresh"></peopleAdd>
  </div>
  
  <div style="width: 50%;margin-left: 1%;border: 1px solid #eee;">
    <el-form class="form">
      <el-form-item>
        <el-button type="add" @click="showAddpeopleDialog">新增人员</el-button>
      </el-form-item>
    </el-form>
    
	  <div>
	  	<property-info ref="transEvent"></property-info>
	  </div>

	</div>
 </el-container>
</template>

<style>
  .el-header {
    /*background-color: #B3C0D1;
    color: #333;*/
    line-height: 64px;
  }
  
  .el-aside {
    /*color: #333;*/
  }
</style>

<script>
  import AddOrUpdate from './propertyInfo-add-or-update'
  import propertyInfo from './propertyinfo.vue'
  import peopleAdd from './propertypeople-add-or-update'
  // import {getDictEntry} from '@/utils/index' 
  export default {
    data () {
      return {
        msg:"test",     //传值给子页面
      	isShow1:true,
      	isShow2:false,
        activeName2: 'first',
        dataForm: {
         contactName:'',
         unitName:'',   
        },
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false,
        peopleDialogVisible: true,
        unitId:'',//当前单位id
      }
    },
    components: {
      AddOrUpdate,
      propertyInfo,
      peopleAdd
    },
    activated () {
      this.getDataList()
    },

    methods: {
    	handleClick(method,param) {
        console.log('me',method);
        console.log('me',param);
				if(param === 'undefined') {
					this.$options.methods[method].bind(this)();
				} else {
					this.$options.methods[method].bind(this, param)();
				}
	  	},
    	tableRowClassName({row, rowIndex}) {
        if (this.wbid == row.id) {
          return 'warning-row';
        }
        return '';
      },
      showAddpeopleDialog(){
        console.log('人员新增');
        if(!this.unitId){
      		 this.$message({
             message: '请选择物业单位',
             type: 'warning'
            });
      		return false;
      	}
        this.peopleDialogVisible = true;
        this.$nextTick(()=>{
          this.$refs['peopleAdd'].init(null,this.unitId);
        });
      },
      handleClick1(tab, event) {
      	if(tab._props.name=='first'){
      		this.isShow1=true;
      		this.isShow2=false;
      	}else if(tab._props.name=='second'){
      		this.isShow1=false;
          this.isShow2=true;
      	}
      },
      // 获取数据列表
      getDataList (type) {
        if(type=='init'){
          this.pageIndex = 1;
        }
        this.dataListLoading = true
        this.$http({
          url: this.$http.adornUrl('/otherunit/otherunit/lists'),
          method: 'get',
          params: this.$http.adornParams({
            'page': this.pageIndex,
            'limit': this.pageSize,
              unitType:2,
              unitName:this.dataForm.unitName,
              contactName:this.dataForm.contactName
          })
        }).then(({data}) => {
          if (data && data.code === 0) {
            console.log('inde',data);
            this.dataList = data.page.list.filter(item=>item.unitType==2)
            this.totalPage = data.page.totalCount
          }else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
        })
      },
      dbclickRow(row,index){
        //  alert("双击具体业务你自己实现,我把 row交给你了");
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        this.$nextTick(() => {
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle (id) {
        var ids = id ? [id] : this.dataListSelections.map(item => {
          return item.id
        })
        this.$confirm('确定删除？', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.$http({
            url: this.$http.adornUrl('/otherunit/otherunit/delete'),
            method: 'post',
            data: this.$http.adornData(ids, false)
          }).then(({data}) => {
            if (data && data.code === 0) {
              this.$message({
                message: '删除成功',
                type: 'success',
                duration: 1500,
                onClose: () => {
                  this.getDataList()
                }
              })
            } else {
              this.$message.error(data.msg)
            }
          })
        })
      },
      handdle (row,event,column){
        console.log('row',row);
      		//this.parentId = row.parentId;
      		this.unitId = row.id;
      		// this.typecode = row.typecode;
      		this.$refs.transEvent.init(row.id)
      },
      refresh (){
      	this.$refs.transEvent.init(this.unitId)
      },
      //新增字典项
      peopleAdd (){
      
      	// this.peopleDialogVisible = true;
        // this.$nextTick(() => {
        //   this.$refs.peopleAdd.init(null,)
        // })
      },
    }
  }
</script>
<style>
	.el-table .warning-row {
    background: oldlace;
  }

  .el-table .success-row {
    background: #f0f9eb;
  }
</style>
<template>
  <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
    :modal="false"
    :visible.sync="visible"
    :v-loading="loading"
  >
    <div slot="title">{{!this.formData.id ? '新增' : '修改'}}</div>
    <el-form
      :model="formData"
      :rules="rules"
      ref="form"
      @keyup.enter.native="dataFormSubmit()"
      class="form"
      label-width="auto"
    >
     <el-row :gutter="30">
          <el-col :span="8">
            <el-form-item label="单位名称" prop="unitName">
              <el-input v-model="formData.unitName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="单位地址" prop="address">
              <el-input v-model="formData.address"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="30">
          <el-col :span="8">
            <el-form-item label="联系人" prop="contactName">
              <el-input v-model="formData.contactName"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="联系人电话" prop="contactPhone">
              <el-input v-model="formData.contactPhone"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
    </el-form>
    <div class="footer">
        <el-button type="primary" @click="dataFormSubmit" style="margin-right:20px">确认</el-button>
        <el-button @click="visible=false" style="margin-left:20px">返回</el-button>
    </div>
  </el-dialog>
</template>

<script>
import { isMobile } from "@/utils/validate";
export default {
  data() {
    var validateMobile = (rule, value, callback) => {
      if (isMobile(value)) {
        callback();
      } else {
        callback("联系人电话格式有误");
      }
    };

    return {
      loading:false,
      visible: false,
      type: "", //电梯类型
      formData: {
        contactName:'',//联系人
        contactPhone:'',//联系人手机
        unitName:'',//维保单位
        address:'', //维保单位地址
        unitType:2,
      },
      rules: {},
      addRules: {
        contactName: [
          {
            required: true,
            message: "联系人不能为空"
          }
        ],
        contactPhone: [
          {
            required: true,
            message: "联系人手机不能为空",
          },{
            validator:validateMobile,
            trigger:'blur'
          }
        ],
         unitName: [
          {
            required: true,
            message: "单位名称不能为空"
          }
        ],
        address: [
          {
            required: true,
            message: "单位地址不能为空"
          }
        ]
      }
    };
  },
 
  methods: {
    init(id) {
      console.log("id", id);
      this.formData.id = id;
      this.visible = true;
      this.$nextTick(() => {
        // console.log(this.$refs["formData"])
         this.$refs['form'].resetFields();
       
        if (this.formData.id) {
          this.loading = true;
          this.$http({
            url: this.$http.adornUrl(
              `/maintenanceunit/maintenanceunit/info/${this.formData.id}`
            ),
            method: "get",
            params: this.$http.adornParams()
          }).then(({ data }) => {
            console.log(data);
            if (data && data.code == 0) {
              this.loading = false;
              console.log(data);
             
            }
          });
        } else {
          // 新增添加rules
          this.rules = this.addRules;
        }
      });
    },
    // 表单提交
    dataFormSubmit() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          this.$http({
            url: this.$http.adornUrl(
              `/otherunit/otherunit/${!this.formData.id ? "save" : "update"}`
            ),
            method: "post",
            data: this.$http.adornData(this.formData)
          }).then(({ data }) => {
            if (data && data.code === 0) {
              this.$message({
                message: "操作成功",
                type: "success",
                duration: 1500,
                onClose: () => {
                  this.visible = false;
                  this.$emit("refreshDataList");
                }
              });
            } else {
              this.$message.error(data.error);
            }
          });
        }
      });
    }
  }
};
</script>
<style scoped>
.footer{
  text-align: center !important;
  margin-top: 20px; 
  padding-bottom: 10px;
}
</style>
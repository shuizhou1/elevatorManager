<!--  -->
<template>
   <el-dialog
    :close-on-click-modal="false"
    :show-close="false"
    :fullscreen="true"
      title="详情"
    :modal="false"
    :visible.sync="visible"
    :v-loading="loading"
  >
  
  <el-form
      ref="form"
      class="form"
      :model="formData"
      label-width="auto"
      @keyup.enter.native="getDataList('init')"
    >
      <el-row :gutter="20">
        <el-col :span="7">
          <el-form-item label="开始时间" prop="stime">
            <el-date-picker
                  v-model="formData.stime"
                  format="yyyy 年 MM 月 dd 日"
                  value-format="yyyy-MM-dd HH:mm:ss"
                  type="datetime"
                ></el-date-picker>
          </el-form-item>
        </el-col>
        <el-col :span="7">
           <el-form-item label="结束时间" prop="etime">
            <el-date-picker
                  v-model="formData.etime"
                  format="yyyy 年 MM 月 dd 日"
                  value-format="yyyy-MM-dd HH:mm:ss"
                  type="datetime"
                ></el-date-picker>
          </el-form-item>
        </el-col>
        <el-col :span="6">
          <el-button type="primary" @click="getDataList('init')">查询</el-button>
        </el-col>
      </el-row>
    </el-form>
   <el-table :data="tableData" border style="width: 100%">
      <el-table-column type="index" fixed width="30"></el-table-column>
      <el-table-column prop="createUserName" label="创建人"></el-table-column>
      <el-table-column prop="createTime" label="创建时间"></el-table-column>
      <el-table-column prop="checkLeaderUserName" label="班长"></el-table-column>
      <el-table-column prop="checkLeaderTime" label="班长确认时间"></el-table-column>
      <el-table-column prop="checkDirectorUserName" label="主任"></el-table-column>
      <el-table-column prop="checkDirectorTime" label="主任确认时间" ></el-table-column>
      <el-table-column prop="checkStatus" :formatter="formatStatus" width="100" label="状态"></el-table-column>
      <!-- <el-table-column prop="maintenanceStatus" :formatter="formatStatus" label="状态"></el-table-column> -->
      <el-table-column  label="操作" header-align="center" align="center" width="200">
        <template slot-scope="scope">
          <el-button
                size="mini"
                style="padding:8px 10px;font-size:12px;height:36px"
                type="primary"
                @click="handlePass(scope.row.id)"
              >审核通过</el-button>
         <el-button
                size="mini"
                style="padding:8px 10px;font-size:12px;height:36px"
                 type="warning"
                @click="showCheckFailRemark(scope.row.id)"
              >审核不通过</el-button>
        </template>
        </el-table-column>
   </el-table>
   <!-- <el-form ref="detailform" :model="detailFormData" :rules="rules" class="form">
        <el-row :gutter="30">
          <el-col :span="12">
            <el-form-item label="本月自主维护内容编制人员" prop="planUserName">
              <el-input v-model="detailFormData.planUserName" clearable></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="本月自主维护内容审核人" prop="planTime" clearable>
              <el-input v-model="detailFormData.checkUserName" clearable></el-input>
            </el-form-item>
          </el-col>
        </el-row>
  </el-form> -->
   <div class="pagination_wraper">
      <el-pagination
        layout="total, sizes, prev, pager, next, jumper"
        :total="totalCount"
        @size-change="sizeChangeHandle"
        @current-change="currentChangeHandle"
        :page-sizes="[5,10,20,50]"
        :page-size="pageSize"
      ></el-pagination>
    </div>
    <div class="button_wraper">
      <!-- <el-button type="primary" @click="handleSave" style="margin-right:20px">保存</el-button> -->
      <!-- <el-button type="primary" @click="handleApply" style="margin-right:20px">维修工单申请</el-button> -->
      <!-- <el-button type="back" @click="updateStatus" style="margin-right:20px">审核通过</el-button> -->
      <!-- <el-button type="danger" @click="updateStatus" style="margin-right:20px">审核不通过</el-button> -->
      <el-button  @click="visible=false" style="margin-right:20px">返回</el-button>
      <!-- <el-button type="primary" v-if="formData.propertyId" @click="handleExport()" style="margin-left:20px">导出保养记录</el-button> -->
    </div>
      <el-dialog
      :show-close="false"
      title="审核不通过原因"
      center
      top='20px'
      :modal="false"
      :visible.sync="dispassresonVisible"
    >
     <div style="padding:10px 20px;text-align:center"> <el-input v-model="checkFailRemark"></el-input></div>
     <div slot="footer"><el-button type="primary" @click="handleDisPass">确定</el-button></div>
      </el-dialog>
   </el-dialog>
  
</template>

<script>
export default {
  data () {
    return {
      dispassresonVisible:false,
      checkFailRemark:'',
      pageSize: 10,
      pageIndex: 1,
      totalCount:0,
      loading:false,
      visible:false,
      tableData:[],
      contentId:'',
      planId:'',
      formData:{
        stime:'',
        etime:''
      }
    };
  },
  components: {},
  created(){},
  methods: {
    init(planId,contentId){
      this.visible = true;
      this.planId= planId;
      this.contentId= contentId;
      console.log('pid',planId)
      console.log('cid',contentId)
      this.getDataList();
    },
    getDataList(type){
      if(type='init'){
        this.pageIndex = 1;
      }
       this.loading = true;
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/list`
        ),
        method: "get",
        params:this.$http.adornParams({
          planId:this.planId,
          contentId:this.contentId,
          stime:this.formData.stime,
          etime:this.formData.etime,
          limit:this.pageSize,
          page:this.pageIndex
        })

      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log('data-----',data);
            this.tableData = data.page.list;
            this.totalCount = data.page.totalCount;
            this.loading = false;
            // this.formData = data.plan;
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    },
     //每页数改变
    sizeChangeHandle(e){
      this.pageSize = e;
      this.pageIndex = 1;
      this.getDataList()
    },
    // 当前页
    currentChangeHandle(e) {
      this.page = e;
      this.getDataList()
    },
    formatStatus(value){
      if(value==1){
        return '待审核'
      }
       if(value==2){
         return '审核成功'
      }
       if(value==3){
         return '审核失败'
      }
    },
    handlePass(){
      this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/check`
        ),
        method: "post",
        data:this.$http.adornData({
          id:this.contentId
        })
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log('data-----',data);
            this.getDataList();
            // this.formData = data.plan;
          }
        })
        .catch(e => {
          this.$message.error(e);
        });
    },
    showCheckFailRemark(id){
      console.log(' showCheckFailRemark',id)
      this.contentId = id;
      this.dispassresonVisible = true;
    },
    handleDisPass(id){
      console.log(' handleDisPass',id)
      if(!this.checkFailRemark){
        this.$message({
          type:'warning',
          message:'请填写不通过原因',
          duration:1500
        })
        return false;
      }
      
       this.$http({
        url: this.$http.adornUrl(
          `/selfmaintenanceplancontent/selfmaintenanceplancontent/check`
        ),
        method: "post",
        data:this.$http.adornData({
          id:this.contentId,
          checkFailRemark:this.checkFailRemark
        })
      })
        .then(({ data }) => {
          if (data && data.code == 0) {
            console.log('data-----',data);
            this.getDataList();
            // this.formData = data.plan;
          }
          this.dispassresonVisible = false;
        })
        .catch(e => {
          this.$message.error(e);
        });
    }
  }
}

</script>
<style  scoped>
</style>